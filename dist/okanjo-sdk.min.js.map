{"version":3,"sources":["okanjo-sdk.min.js"],"names":["require","r","e","n","t","o","i","f","c","u","a","Error","code","p","exports","call","length","1","module","Provider","client","this","prototype","compile","query","provider","execute","callback","_unauthorizedHook","err","config","onUnauthorizedResponse","2","global","FetchProvider","rpcHost","rpcMethod","util","timers","setImmediate","inherits","req","method","body","JSON","stringify","credentials","headers","Accept","Content-Type","fetch","encodeURIComponent","action","then","res","json","error","Promise","reject","resolve","catch","statusCode","message","attributes","source","wrappedError","bind","self","window","../provider","3","Query","base","options","path","pathParams","payload","key","sessionToken","_extend","sdkUtil","querystring","extra","overrideAll","undefined","setAction","setMethod","setPath","setPathParams","where","data","setKey","setSessionToken","getRealPath","buildPath","getFullPath","params","copy","doc","skip","count","take","./util","4","destination","Array","isArray","forEach","val","index","Object","keys","token","name","resultPath","extractParams","exec","replace","5","6","create","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","7","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","8","hasOwnProperty","obj","prop","qs","sep","eq","regexp","split","maxKeys","kstr","vstr","k","v","x","idx","indexOf","substr","decodeURIComponent","xs","toString","9","map","stringifyPrimitive","isFinite","objectKeys","ks","join","10","decode","parse","encode","./decode","./encode","11","clearImmediate","Timeout","id","clearFn","_id","_clearFn","Function","slice","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","fn","process/browser.js","12","arg","fill","readUInt8","13","inspect","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","isUndefined","customInspect","stylizeWithColor","formatValue","str","styleType","style","styles","arrayToHash","hash","recurseTimes","isFunction","ret","isString","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","braces","toUTCString","output","formatArray","formatProperty","pop","reduceToSingleString","simple","isNumber","isNull","l","String","match","desc","getOwnPropertyDescriptor","get","set","line","numLinesEst","reduce","prev","cur","ar","isNullOrUndefined","isSymbol","re","isObject","objectToString","d","isPrimitive","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","format","objects","Number","_","deprecate","msg","deprecated","warned","throwDeprecation","traceDeprecation","console","trace","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","isBuffer","log","origin","add","./support/isBuffer","_process","okanjo-sdk","Client","_bindResources","Version","_makeRequest","spec","accounts","retrieve","account_id","list","update","recover","retrieve_acl","ads","articles","url","domains","domain_name","delete","organizations","org_id","placements","placement_id","create_test","delete_test","placement_test_id","update_test","products","product_id","properties","property_id","resource_sets","resource_set_name","roles","role_id","add_account","list_accounts","remove_account","sessions","session_id","stores","store_id","../lib/provider","../lib/providers/fetch_provider","../lib/providers/http_provider","../lib/query"],"mappings":"AAAAA,QAAQ,WAAY,QAASC,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAE,kBAAmBR,UAASA,OAAQ,KAAIO,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGG,EAAE,MAAOA,GAAEH,GAAE,EAAI,IAAII,GAAE,GAAIC,OAAM,uBAAuBL,EAAE,IAAK,MAAMI,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEV,EAAEG,IAAIQ,WAAYZ,GAAEI,GAAG,GAAGS,KAAKF,EAAEC,QAAQ,SAASb,GAAoB,MAAOI,GAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIY,EAAEA,EAAEC,QAAQb,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGQ,QAAQ,IAAI,GAAIL,GAAE,kBAAmBT,UAASA,QAAQM,EAAE,EAAEA,EAAEF,EAAEY,OAAOV,IAAID,EAAED,EAAEE,GAAI,OAAOD,GAAE,MAAOJ,OAAOgB,GAAG,SAASjB,EAAQkB,EAAOJ,GA2Chf,QAASK,GAASC,GACdC,KAAKD,OAASA,EAOlBD,EAASG,UAAUC,QAAU,SAASC,GAClC,GAAIC,GAAWJ,IAGfG,GAAME,QAAU,SAASC,GACrB,MAAOF,GAASC,QAAQF,EAAOG,KAavCR,EAASG,UAAUI,QAAU,SAASF,EAAOG,GAEzCA,EAAS,GAAIhB,OAAM,sCAAuC,OAW9DQ,EAASG,UAAUM,kBAAoB,SAASC,EAAKL,GACQ,kBAA9CH,MAAKD,OAAOU,OAAOC,wBAC1BV,KAAKD,OAAOU,OAAOC,uBAAuBF,EAAKL,IAWvDN,EAAOJ,QAAUK,OACXa,GAAG,SAAShC,EAAQkB,EAAOJ,IACjC,SAAWmB,GAgDX,QAASC,GAAcd,GACnBD,EAASJ,KAAKM,KAAMD,GAMpBC,KAAKc,QAAUf,EAAOU,OAAOK,SAAW,OAMxCd,KAAKe,UAAYhB,EAAOU,OAAOM,WAAa,OAvBhD,GAAIC,GAAOrC,EAAQ,QACfsC,EAAStC,EAAQ,UACjBuC,EAAeN,EAAOM,cAA2CD,EAAOC,aACxEpB,EAAWnB,EAAQ,cAyBvBqC,GAAKG,SAASN,EAAef,GAS7Be,EAAcZ,UAAUI,QAAU,SAASF,EAAOG,GAE9C,GAAIc,IACAC,OAAQrB,KAAKe,UACbO,KAAMC,KAAKC,UAAUrB,GACrBsB,YAAa,cACbC,SACIC,OAAU,mBACVC,eAAgB,mCAIxB,OAAOC,OAAM7B,KAAKc,QAAU,MAAQgB,mBAAmB3B,EAAM4B,QAASX,GACjEY,KAAK,SAASC,GACX,MAAOA,GAAIC,SAEdF,KAAK,SAASC,GACX,MAAIA,GAAIE,MAEGC,QAAQC,OAAOJ,GAGlB3B,EACOY,EAAa,WAChBZ,EAAS,KAAM2B,KAGhBG,QAAQE,QAAQL,KAG9BM,MAAM,SAAS/B,GAgBZ,MAfKA,IAAQA,EAAIgC,aACbhC,GACIgC,WAAY,IACZL,MAAQ3B,YAAelB,OAAQkB,EAAIiC,QAAqEjC,EACxGiC,QAAS,uBACTC,YACIC,OAAQ,iCACRC,aAAcpC,KAMH,MAAnBA,EAAIgC,YAAoBxC,KAAKO,kBAAkBC,EAAKL,GAEpDG,EACOY,EAAa,WAChBZ,EAASE,EAAK,QAGf4B,QAAQC,OAAO7B,IACxBqC,KAAK7C,QAUfH,EAAOJ,QAAUoB,IACdnB,KAAKM,KAAuB,mBAAXY,QAAyBA,OAAyB,mBAATkC,MAAuBA,KAAyB,mBAAXC,QAAyBA,aACxHC,cAAc,EAAE/B,OAAS,GAAGD,KAAO,KAAKiC,GAAG,SAAStE,EAAQkB,EAAOJ,GA+CtE,QAASyD,GAAMC,EAAMC,GAMjBpD,KAAK+B,OAAS,KAOd/B,KAAKqB,OAAS,KAMdrB,KAAKqD,KAAO,GAMZrD,KAAKsD,cAMLtD,KAAKG,MAAQ,KAMbH,KAAKuD,QAAU,KAMfvD,KAAKwD,IAAM,KAMXxD,KAAKyD,aAAe,KAEpBzD,KAAK0D,QAAQP,GACbnD,KAAK0D,QAAQN,GAAS,GA7D1B,GAAIO,GAAUhF,EAAQ,UAClBiF,EAAcjF,EAAQ,cAuE1BuE,GAAMjD,UAAUyD,QAAU,SAASG,EAAOC,GAClCD,QACqBE,KAAjBF,EAAM9B,QAAsB/B,KAAKgE,UAAUH,EAAM9B,YAChCgC,KAAjBF,EAAMxC,QAAsBrB,KAAKiE,UAAUJ,EAAMxC,YAClC0C,KAAfF,EAAMR,MAAoBrD,KAAKkE,QAAQL,EAAMR,UACxBU,KAArBF,EAAMP,YAA0BtD,KAAKmE,cAAcN,EAAMP,gBACzCS,KAAhBF,EAAM1D,OAAqBH,KAAKoE,MAAMP,EAAM1D,WAC1B4D,KAAlBF,EAAMN,SAAuBvD,KAAKqE,KAAKR,EAAMN,SAE7CO,QACkBC,KAAdF,EAAML,KAAmBxD,KAAKsE,OAAOT,EAAML,SACpBO,KAAvBF,EAAMJ,cAA4BzD,KAAKuE,gBAAgBV,EAAMJ,iBAU7EP,EAAMjD,UAAUuE,YAAc,WAC1B,MAAOb,GAAQc,UAAUzE,KAAKqD,KAAMrD,KAAKsD,aAQ7CJ,EAAMjD,UAAUyE,YAAc,WAC1B,GAAIrB,GAAOrD,KAAKwE,aAChB,OAAInB,IAAQrD,KAAKG,MACNkD,EAAO,IAAMO,EAAYpC,UAAUxB,KAAKG,OAExCkD,GASfH,EAAMjD,UAAU+D,UAAY,SAASjC,GAAgC,MAAtB/B,MAAK+B,OAASA,EAAe/B,MAO5EkD,EAAMjD,UAAUgE,UAAY,SAAS5C,GAAgC,MAAtBrB,MAAKqB,OAASA,EAAerB,MAQ5EkD,EAAMjD,UAAUiE,QAAU,SAASb,GAA0B,MAAlBrD,MAAKqD,KAAOA,EAAarD,MAOpEkD,EAAMjD,UAAUkE,cAAgB,SAASQ,GAAmE,MAAzD3E,MAAKsD,WAAaK,EAAQiB,KAAK5E,KAAKsD,WAAYqB,GAAgB3E,MAOnHkD,EAAMjD,UAAUmE,MAAQ,SAASO,GAAyD,MAA/C3E,MAAKG,MAAQwD,EAAQiB,KAAK5E,KAAKG,MAAOwE,GAAgB3E,MAOjGkD,EAAMjD,UAAUoE,KAAO,SAASQ,GAAuD,MAAhD7E,MAAKuD,QAAUI,EAAQiB,KAAK5E,KAAKuD,QAASsB,GAAa7E,MAO9FkD,EAAMjD,UAAU6E,KAAO,SAASC,GAAiE,MAAxD/E,MAAKG,MAAQwD,EAAQiB,KAAK5E,KAAKG,OAAS2E,KAAMC,IAAiB/E,MAOxGkD,EAAMjD,UAAU+E,KAAO,SAASD,GAAiE,MAAxD/E,MAAKG,MAAQwD,EAAQiB,KAAK5E,KAAKG,OAAS6E,KAAMD,IAAiB/E,MAOxGkD,EAAMjD,UAAUqE,OAAS,SAASd,GAAuB,MAAhBxD,MAAKwD,IAAMA,EAAYxD,MAQhEkD,EAAMjD,UAAUsE,gBAAkB,SAASd,GAAkD,MAAlCzD,MAAKyD,aAAeA,EAAqBzD,MAGpGH,EAAOJ,QAAUyD,IACd+B,SAAS,EAAErB,YAAc,KAAKsB,GAAG,SAASvG,EAAQkB,EAAOJ,GA6C5D,QAASmF,GAAKO,EAAaxC,GAiBvB,MAhBe,QAAXA,GAAqC,gBAAXA,GACtByC,MAAMC,QAAQ1C,IACdwC,EAAcA,MACdxC,EAAO2C,QAAQ,SAASC,EAAKC,GACzBL,EAAYK,GAASZ,EAAKO,EAAYK,GAAQD,OAGlDJ,EAAcA,MACdM,OAAOC,KAAK/C,GAAQ2C,QAAQ,SAAS9B,GACjC2B,EAAY3B,GAAOoB,EAAKO,EAAY3B,GAAMb,EAAOa,OAIzD2B,EAAcxC,EAGXwC,EAYX,QAASV,GAAUpB,EAAMsB,GAKrB,IAHA,GAAuBnF,GAAGmG,EAAOC,EAA7BC,EAAaxC,EAGyB,QAAlC7D,EAAIsG,EAAcC,KAAK1C,KAAiB,CAM5C,GAJAsC,EAAQnG,EAAE,GACVoG,EAAOpG,EAAE,IAGLmF,EAAOiB,GAGP,MAAO,IAAItG,OAAM,kBAAoBqG,EAAQ,qBAAuBtC,EAFpEwC,GAAaA,EAAWG,QAAQL,EAAO7D,mBAAmB6C,EAAOiB,KAMzE,MAAOC,GA1BX,GAAIC,GAAgB,kBAkCpBjG,GAAOJ,SACHmF,KAAMA,EACNH,UAAWA,QAETwB,GAAG,SAAStH,EAAQkB,EAAOJ,SAE3ByG,GAAG,SAASvH,EAAQkB,EAAOJ,GACJ,kBAAlBgG,QAAOU,OAEhBtG,EAAOJ,QAAU,SAAkB2G,EAAMC,GACvCD,EAAKE,OAASD,EACdD,EAAKnG,UAAYwF,OAAOU,OAAOE,EAAUpG,WACvCsG,aACEC,MAAOJ,EACPK,YAAY,EACZC,UAAU,EACVC,cAAc,MAMpB9G,EAAOJ,QAAU,SAAkB2G,EAAMC,GACvCD,EAAKE,OAASD,CACd,IAAIO,GAAW,YACfA,GAAS3G,UAAYoG,EAAUpG,UAC/BmG,EAAKnG,UAAY,GAAI2G,GACrBR,EAAKnG,UAAUsG,YAAcH,QAI3BS,GAAG,SAASlI,EAAQkB,EAAOJ,GAYjC,QAASqH,KACL,KAAM,IAAIxH,OAAM,mCAEpB,QAASyH,KACL,KAAM,IAAIzH,OAAM,qCAsBpB,QAAS0H,GAAWC,GAChB,GAAIC,IAAqBC,WAErB,MAAOA,YAAWF,EAAK,EAG3B,KAAKC,IAAqBJ,IAAqBI,IAAqBC,WAEhE,MADAD,GAAmBC,WACZA,WAAWF,EAAK,EAE3B,KAEI,MAAOC,GAAiBD,EAAK,GAC/B,MAAMpI,GACJ,IAEI,MAAOqI,GAAiBxH,KAAK,KAAMuH,EAAK,GAC1C,MAAMpI,GAEJ,MAAOqI,GAAiBxH,KAAKM,KAAMiH,EAAK,KAMpD,QAASG,GAAgBC,GACrB,GAAIC,IAAuBC,aAEvB,MAAOA,cAAaF,EAGxB,KAAKC,IAAuBP,IAAwBO,IAAuBC,aAEvE,MADAD,GAAqBC,aACdA,aAAaF,EAExB,KAEI,MAAOC,GAAmBD,GAC5B,MAAOxI,GACL,IAEI,MAAOyI,GAAmB5H,KAAK,KAAM2H,GACvC,MAAOxI,GAGL,MAAOyI,GAAmB5H,KAAKM,KAAMqH,KAYjD,QAASG,KACAC,GAAaC,IAGlBD,GAAW,EACPC,EAAa/H,OACbgI,EAAQD,EAAaE,OAAOD,GAE5BE,GAAc,EAEdF,EAAMhI,QACNmI,KAIR,QAASA,KACL,IAAIL,EAAJ,CAGA,GAAIM,GAAUf,EAAWQ,EACzBC,IAAW,CAGX,KADA,GAAIO,GAAML,EAAMhI,OACVqI,GAAK,CAGP,IAFAN,EAAeC,EACfA,OACSE,EAAaG,GACdN,GACAA,EAAaG,GAAYI,KAGjCJ,IAAc,EACdG,EAAML,EAAMhI,OAEhB+H,EAAe,KACfD,GAAW,EACXL,EAAgBW,IAiBpB,QAASG,GAAKjB,EAAKkB,GACfnI,KAAKiH,IAAMA,EACXjH,KAAKmI,MAAQA,EAYjB,QAASC,MAhKT,GAOIlB,GACAI,EARAe,EAAUxI,EAAOJ,YAgBpB,WACG,IAEQyH,EADsB,kBAAfC,YACYA,WAEAL,EAEzB,MAAOjI,GACLqI,EAAmBJ,EAEvB,IAEQQ,EADwB,kBAAjBC,cACcA,aAEAR,EAE3B,MAAOlI,GACLyI,EAAqBP,KAuD7B,IAEIW,GAFAC,KACAF,GAAW,EAEXI,GAAc,CAyClBQ,GAAQC,SAAW,SAAUrB,GACzB,GAAIsB,GAAO,GAAInD,OAAMoD,UAAU7I,OAAS,EACxC,IAAI6I,UAAU7I,OAAS,EACnB,IAAK,GAAIV,GAAI,EAAGA,EAAIuJ,UAAU7I,OAAQV,IAClCsJ,EAAKtJ,EAAI,GAAKuJ,UAAUvJ,EAGhC0I,GAAMc,KAAK,GAAIP,GAAKjB,EAAKsB,IACJ,IAAjBZ,EAAMhI,QAAiB8H,GACvBT,EAAWc,IASnBI,EAAKjI,UAAUgI,IAAM,WACjBjI,KAAKiH,IAAIyB,MAAM,KAAM1I,KAAKmI,QAE9BE,EAAQM,MAAQ,UAChBN,EAAQO,SAAU,EAClBP,EAAQQ,OACRR,EAAQS,QACRT,EAAQU,QAAU,GAClBV,EAAQW,YAIRX,EAAQY,GAAKb,EACbC,EAAQa,YAAcd,EACtBC,EAAQc,KAAOf,EACfC,EAAQe,IAAMhB,EACdC,EAAQgB,eAAiBjB,EACzBC,EAAQiB,mBAAqBlB,EAC7BC,EAAQkB,KAAOnB,EACfC,EAAQmB,gBAAkBpB,EAC1BC,EAAQoB,oBAAsBrB,EAE9BC,EAAQqB,UAAY,SAAU9D,GAAQ,UAEtCyC,EAAQsB,QAAU,SAAU/D,GACxB,KAAM,IAAItG,OAAM,qCAGpB+I,EAAQuB,IAAM,WAAc,MAAO,KACnCvB,EAAQwB,MAAQ,SAAUC,GACtB,KAAM,IAAIxK,OAAM,mCAEpB+I,EAAQ0B,MAAQ,WAAa,MAAO,SAE9BC,GAAG,SAASrL,EAAQkB,EAAOJ,GAsBjC,YAKA,SAASwK,GAAeC,EAAKC,GAC3B,MAAO1E,QAAOxF,UAAUgK,eAAevK,KAAKwK,EAAKC,GAGnDtK,EAAOJ,QAAU,SAAS2K,EAAIC,EAAKC,EAAIlH,GACrCiH,EAAMA,GAAO,IACbC,EAAKA,GAAM,GACX,IAAIJ,KAEJ,IAAkB,gBAAPE,IAAiC,IAAdA,EAAGzK,OAC/B,MAAOuK,EAGT,IAAIK,GAAS,KACbH,GAAKA,EAAGI,MAAMH,EAEd,IAAII,GAAU,GACVrH,IAAsC,gBAApBA,GAAQqH,UAC5BA,EAAUrH,EAAQqH,QAGpB,IAAIzC,GAAMoC,EAAGzK,MAET8K,GAAU,GAAKzC,EAAMyC,IACvBzC,EAAMyC,EAGR,KAAK,GAAIxL,GAAI,EAAGA,EAAI+I,IAAO/I,EAAG,CAC5B,GAEIyL,GAAMC,EAAMC,EAAGC,EAFfC,EAAIV,EAAGnL,GAAG+G,QAAQuE,EAAQ,OAC1BQ,EAAMD,EAAEE,QAAQV,EAGhBS,IAAO,GACTL,EAAOI,EAAEG,OAAO,EAAGF,GACnBJ,EAAOG,EAAEG,OAAOF,EAAM,KAEtBL,EAAOI,EACPH,EAAO,IAGTC,EAAIM,mBAAmBR,GACvBG,EAAIK,mBAAmBP,GAElBV,EAAeC,EAAKU,GAEdvF,EAAQ6E,EAAIU,IACrBV,EAAIU,GAAGnC,KAAKoC,GAEZX,EAAIU,IAAMV,EAAIU,GAAIC,GAJlBX,EAAIU,GAAKC,EAQb,MAAOX,GAGT,IAAI7E,GAAUD,MAAMC,SAAW,SAAU8F,GACvC,MAA8C,mBAAvC1F,OAAOxF,UAAUmL,SAAS1L,KAAKyL,SAGlCE,GAAG,SAAS1M,EAAQkB,EAAOJ,GAsBjC,YAgDA,SAAS6L,GAAKH,EAAIjM,GAChB,GAAIiM,EAAGG,IAAK,MAAOH,GAAGG,IAAIpM,EAE1B,KAAK,GADD+C,MACKhD,EAAI,EAAGA,EAAIkM,EAAGxL,OAAQV,IAC7BgD,EAAIwG,KAAKvJ,EAAEiM,EAAGlM,GAAIA,GAEpB,OAAOgD,GApDT,GAAIsJ,GAAqB,SAASV,GAChC,aAAeA,IACb,IAAK,SACH,MAAOA,EAET,KAAK,UACH,MAAOA,GAAI,OAAS,OAEtB,KAAK,SACH,MAAOW,UAASX,GAAKA,EAAI,EAE3B,SACE,MAAO,IAIbhL,GAAOJ,QAAU,SAASyK,EAAKG,EAAKC,EAAI1E,GAOtC,MANAyE,GAAMA,GAAO,IACbC,EAAKA,GAAM,IACC,OAARJ,IACFA,MAAMnG,IAGW,gBAARmG,GACFoB,EAAIG,EAAWvB,GAAM,SAASU,GACnC,GAAIc,GAAK5J,mBAAmByJ,EAAmBX,IAAMN,CACrD,OAAIjF,GAAQ6E,EAAIU,IACPU,EAAIpB,EAAIU,GAAI,SAASC,GAC1B,MAAOa,GAAK5J,mBAAmByJ,EAAmBV,MACjDc,KAAKtB,GAEDqB,EAAK5J,mBAAmByJ,EAAmBrB,EAAIU,OAEvDe,KAAKtB,GAILzE,EACE9D,mBAAmByJ,EAAmB3F,IAAS0E,EAC/CxI,mBAAmByJ,EAAmBrB,IAF3B,GAKpB,IAAI7E,GAAUD,MAAMC,SAAW,SAAU8F,GACvC,MAA8C,mBAAvC1F,OAAOxF,UAAUmL,SAAS1L,KAAKyL,IAYpCM,EAAahG,OAAOC,MAAQ,SAAUwE,GACxC,GAAIjI,KACJ,KAAK,GAAIuB,KAAO0G,GACVzE,OAAOxF,UAAUgK,eAAevK,KAAKwK,EAAK1G,IAAMvB,EAAIwG,KAAKjF,EAE/D,OAAOvB,SAGH2J,IAAI,SAASjN,EAAQkB,EAAOJ,GAClC,YAEAA,GAAQoM,OAASpM,EAAQqM,MAAQnN,EAAQ,YACzCc,EAAQsM,OAAStM,EAAQ+B,UAAY7C,EAAQ,cAE1CqN,WAAW,EAAEC,WAAW,IAAIC,IAAI,SAASvN,EAAQkB,EAAOJ,IAC3D,SAAWyB,EAAaiL,GAkBxB,QAASC,GAAQC,EAAIC,GACnBtM,KAAKuM,IAAMF,EACXrM,KAAKwM,SAAWF,EAnBlB,GAAIhE,GAAW3J,EAAQ,sBAAsB2J,SACzCI,EAAQ+D,SAASxM,UAAUyI,MAC3BgE,EAAQtH,MAAMnF,UAAUyM,MACxBC,KACAC,EAAkB,CAItBnN,GAAQ0H,WAAa,WACnB,MAAO,IAAIiF,GAAQ1D,EAAMhJ,KAAKyH,WAAYpE,OAAQyF,WAAYjB,eAEhE9H,EAAQoN,YAAc,WACpB,MAAO,IAAIT,GAAQ1D,EAAMhJ,KAAKmN,YAAa9J,OAAQyF,WAAYsE,gBAEjErN,EAAQ8H,aACR9H,EAAQqN,cAAgB,SAAS/E,GAAWA,EAAQgF,SAMpDX,EAAQnM,UAAU+M,MAAQZ,EAAQnM,UAAUgN,IAAM,aAClDb,EAAQnM,UAAU8M,MAAQ,WACxB/M,KAAKwM,SAAS9M,KAAKqD,OAAQ/C,KAAKuM,MAIlC9M,EAAQyN,OAAS,SAASC,EAAMC,GAC9B7F,aAAa4F,EAAKE,gBAClBF,EAAKG,aAAeF,GAGtB3N,EAAQ8N,SAAW,SAASJ,GAC1B5F,aAAa4F,EAAKE,gBAClBF,EAAKG,cAAgB,GAGvB7N,EAAQ+N,aAAe/N,EAAQgO,OAAS,SAASN,GAC/C5F,aAAa4F,EAAKE,eAElB,IAAID,GAAQD,EAAKG,YACbF,IAAS,IACXD,EAAKE,eAAiBlG,WAAW,WAC3BgG,EAAKO,YACPP,EAAKO,cACNN,KAKP3N,EAAQyB,aAAuC,kBAAjBA,GAA8BA,EAAe,SAASyM,GAClF,GAAItB,GAAKO,IACLrE,IAAOC,UAAU7I,OAAS,IAAY+M,EAAMhN,KAAK8I,UAAW,EAkBhE,OAhBAmE,GAAaN,IAAM,EAEnB/D,EAAS,WACHqE,EAAaN,KAGX9D,EACFoF,EAAGjF,MAAM,KAAMH,GAEfoF,EAAGjO,KAAK,MAGVD,EAAQ0M,eAAeE,MAIpBA,GAGT5M,EAAQ0M,eAA2C,kBAAnBA,GAAgCA,EAAiB,SAASE,SACjFM,GAAaN,MAEnB3M,KAAKM,KAAKrB,EAAQ,UAAUuC,aAAavC,EAAQ,UAAUwN,kBAC3DyB,qBAAqB,EAAE3M,OAAS,KAAK4M,IAAI,SAASlP,EAAQkB,EAAOJ,GACpEI,EAAOJ,QAAU,SAAkBqO,GACjC,MAAOA,IAAsB,gBAARA,IACI,kBAAbA,GAAIlJ,MACS,kBAAbkJ,GAAIC,MACc,kBAAlBD,GAAIE,gBAEZC,IAAI,SAAStP,EAAQkB,EAAOJ,IAClC,SAAW4I,EAAQzH,GA6HnB,QAASsN,GAAQhE,EAAKiE,GAEpB,GAAIC,IACFC,QACAC,QAASC,EAkBX,OAfI/F,WAAU7I,QAAU,IAAGyO,EAAII,MAAQhG,UAAU,IAC7CA,UAAU7I,QAAU,IAAGyO,EAAIK,OAASjG,UAAU,IAC9CkG,EAAUP,GAEZC,EAAIO,WAAaR,EACRA,GAET1O,EAAQiE,QAAQ0K,EAAKD,GAGnBS,EAAYR,EAAIO,cAAaP,EAAIO,YAAa,GAC9CC,EAAYR,EAAII,SAAQJ,EAAII,MAAQ,GACpCI,EAAYR,EAAIK,UAASL,EAAIK,QAAS,GACtCG,EAAYR,EAAIS,iBAAgBT,EAAIS,eAAgB,GACpDT,EAAIK,SAAQL,EAAIE,QAAUQ,GACvBC,EAAYX,EAAKlE,EAAKkE,EAAII,OAoCnC,QAASM,GAAiBE,EAAKC,GAC7B,GAAIC,GAAQhB,EAAQiB,OAAOF,EAE3B,OAAIC,GACK,KAAYhB,EAAQO,OAAOS,GAAO,GAAK,IAAMF,EAC7C,KAAYd,EAAQO,OAAOS,GAAO,GAAK,IAEvCF,EAKX,QAAST,GAAeS,EAAKC,GAC3B,MAAOD,GAIT,QAASI,GAAYjH,GACnB,GAAIkH,KAMJ,OAJAlH,GAAM7C,QAAQ,SAASC,EAAKwF,GAC1BsE,EAAK9J,IAAO,IAGP8J,EAIT,QAASN,GAAYX,EAAK5H,EAAO8I,GAG/B,GAAIlB,EAAIS,eACJrI,GACA+I,EAAW/I,EAAM0H,UAEjB1H,EAAM0H,UAAYzO,EAAQyO,WAExB1H,EAAMD,aAAeC,EAAMD,YAAYtG,YAAcuG,GAAQ,CACjE,GAAIgJ,GAAMhJ,EAAM0H,QAAQoB,EAAclB,EAItC,OAHKqB,GAASD,KACZA,EAAMT,EAAYX,EAAKoB,EAAKF,IAEvBE,EAIT,GAAIE,GAAYC,EAAgBvB,EAAK5H,EACrC,IAAIkJ,EACF,MAAOA,EAIT,IAAIhK,GAAOD,OAAOC,KAAKc,GACnBoJ,EAAcR,EAAY1J,EAQ9B,IANI0I,EAAIO,aACNjJ,EAAOD,OAAOoK,oBAAoBrJ,IAKhCsJ,EAAQtJ,KACJd,EAAKsF,QAAQ,YAAc,GAAKtF,EAAKsF,QAAQ,gBAAkB,GACrE,MAAO+E,GAAYvJ,EAIrB,IAAoB,IAAhBd,EAAK/F,OAAc,CACrB,GAAI4P,EAAW/I,GAAQ,CACrB,GAAIZ,GAAOY,EAAMZ,KAAO,KAAOY,EAAMZ,KAAO,EAC5C,OAAOwI,GAAIE,QAAQ,YAAc1I,EAAO,IAAK,WAE/C,GAAIoK,EAASxJ,GACX,MAAO4H,GAAIE,QAAQ2B,OAAOhQ,UAAUmL,SAAS1L,KAAK8G,GAAQ,SAE5D,IAAI0J,EAAO1J,GACT,MAAO4H,GAAIE,QAAQ6B,KAAKlQ,UAAUmL,SAAS1L,KAAK8G,GAAQ,OAE1D,IAAIsJ,EAAQtJ,GACV,MAAOuJ,GAAYvJ,GAIvB,GAAIrD,GAAO,GAAIgF,GAAQ,EAAOiI,GAAU,IAAK,IAS7C,IANI/K,EAAQmB,KACV2B,GAAQ,EACRiI,GAAU,IAAK,MAIbb,EAAW/I,GAAQ,CAErBrD,EAAO,cADCqD,EAAMZ,KAAO,KAAOY,EAAMZ,KAAO,IACf,IAkB5B,GAdIoK,EAASxJ,KACXrD,EAAO,IAAM8M,OAAOhQ,UAAUmL,SAAS1L,KAAK8G,IAI1C0J,EAAO1J,KACTrD,EAAO,IAAMgN,KAAKlQ,UAAUoQ,YAAY3Q,KAAK8G,IAI3CsJ,EAAQtJ,KACVrD,EAAO,IAAM4M,EAAYvJ,IAGP,IAAhBd,EAAK/F,UAAkBwI,GAAyB,GAAhB3B,EAAM7G,QACxC,MAAOyQ,GAAO,GAAKjN,EAAOiN,EAAO,EAGnC,IAAId,EAAe,EACjB,MAAIU,GAASxJ,GACJ4H,EAAIE,QAAQ2B,OAAOhQ,UAAUmL,SAAS1L,KAAK8G,GAAQ,UAEnD4H,EAAIE,QAAQ,WAAY,UAInCF,GAAIC,KAAK5F,KAAKjC,EAEd,IAAI8J,EAWJ,OATEA,GADEnI,EACOoI,EAAYnC,EAAK5H,EAAO8I,EAAcM,EAAalK,GAEnDA,EAAK4F,IAAI,SAAS9H,GACzB,MAAOgN,GAAepC,EAAK5H,EAAO8I,EAAcM,EAAapM,EAAK2E,KAItEiG,EAAIC,KAAKoC,MAEFC,EAAqBJ,EAAQnN,EAAMiN,GAI5C,QAAST,GAAgBvB,EAAK5H,GAC5B,GAAIoI,EAAYpI,GACd,MAAO4H,GAAIE,QAAQ,YAAa,YAClC,IAAImB,EAASjJ,GAAQ,CACnB,GAAImK,GAAS,IAAOpP,KAAKC,UAAUgF,GAAOR,QAAQ,SAAU,IAClBA,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAAO,GACjE,OAAOoI,GAAIE,QAAQqC,EAAQ,UAE7B,MAAIC,GAASpK,GACJ4H,EAAIE,QAAQ,GAAK9H,EAAO,UAC7BkI,EAAUlI,GACL4H,EAAIE,QAAQ,GAAK9H,EAAO,WAE7BqK,EAAOrK,GACF4H,EAAIE,QAAQ,OAAQ,YAD7B,GAKF,QAASyB,GAAYvJ,GACnB,MAAO,IAAMlH,MAAMW,UAAUmL,SAAS1L,KAAK8G,GAAS,IAItD,QAAS+J,GAAYnC,EAAK5H,EAAO8I,EAAcM,EAAalK,GAE1D,IAAK,GADD4K,MACKrR,EAAI,EAAG6R,EAAItK,EAAM7G,OAAQV,EAAI6R,IAAK7R,EACrCgL,EAAezD,EAAOuK,OAAO9R,IAC/BqR,EAAO7H,KAAK+H,EAAepC,EAAK5H,EAAO8I,EAAcM,EACjDmB,OAAO9R,IAAI,IAEfqR,EAAO7H,KAAK,GAShB,OANA/C,GAAKJ,QAAQ,SAAS9B,GACfA,EAAIwN,MAAM,UACbV,EAAO7H,KAAK+H,EAAepC,EAAK5H,EAAO8I,EAAcM,EACjDpM,GAAK,MAGN8M,EAIT,QAASE,GAAepC,EAAK5H,EAAO8I,EAAcM,EAAapM,EAAK2E,GAClE,GAAIvC,GAAMoJ,EAAKiC,CAsCf,IArCAA,EAAOxL,OAAOyL,yBAAyB1K,EAAOhD,KAAUgD,MAAOA,EAAMhD,IACjEyN,EAAKE,IAELnC,EADEiC,EAAKG,IACDhD,EAAIE,QAAQ,kBAAmB,WAE/BF,EAAIE,QAAQ,WAAY,WAG5B2C,EAAKG,MACPpC,EAAMZ,EAAIE,QAAQ,WAAY,YAG7BrE,EAAe2F,EAAapM,KAC/BoC,EAAO,IAAMpC,EAAM,KAEhBwL,IACCZ,EAAIC,KAAKrD,QAAQiG,EAAKzK,OAAS,GAE/BwI,EADE6B,EAAOvB,GACHP,EAAYX,EAAK6C,EAAKzK,MAAO,MAE7BuI,EAAYX,EAAK6C,EAAKzK,MAAO8I,EAAe,GAEhDN,EAAIhE,QAAQ,OAAS,IAErBgE,EADE7G,EACI6G,EAAIxE,MAAM,MAAMc,IAAI,SAAS+F,GACjC,MAAO,KAAOA,IACb1F,KAAK,MAAMV,OAAO,GAEf,KAAO+D,EAAIxE,MAAM,MAAMc,IAAI,SAAS+F,GACxC,MAAO,MAAQA,IACd1F,KAAK,QAIZqD,EAAMZ,EAAIE,QAAQ,aAAc,YAGhCM,EAAYhJ,GAAO,CACrB,GAAIuC,GAAS3E,EAAIwN,MAAM,SACrB,MAAOhC,EAETpJ,GAAOrE,KAAKC,UAAU,GAAKgC,GACvBoC,EAAKoL,MAAM,iCACbpL,EAAOA,EAAKqF,OAAO,EAAGrF,EAAKjG,OAAS,GACpCiG,EAAOwI,EAAIE,QAAQ1I,EAAM,UAEzBA,EAAOA,EAAKI,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KAChCJ,EAAOwI,EAAIE,QAAQ1I,EAAM,WAI7B,MAAOA,GAAO,KAAOoJ,EAIvB,QAAS0B,GAAqBJ,EAAQnN,EAAMiN,GAC1C,GAAIkB,GAAc,CAOlB,OANahB,GAAOiB,OAAO,SAASC,EAAMC,GAGxC,MAFAH,KACIG,EAAIzG,QAAQ,OAAS,GAAGsG,IACrBE,EAAOC,EAAIzL,QAAQ,kBAAmB,IAAIrG,OAAS,GACzD,GAEU,GACJyQ,EAAO,IACG,KAATjN,EAAc,GAAKA,EAAO,OAC3B,IACAmN,EAAO3E,KAAK,SACZ,IACAyE,EAAO,GAGTA,EAAO,GAAKjN,EAAO,IAAMmN,EAAO3E,KAAK,MAAQ,IAAMyE,EAAO,GAMnE,QAAS/K,GAAQqM,GACf,MAAOtM,OAAMC,QAAQqM,GAIvB,QAAShD,GAAUZ,GACjB,MAAsB,iBAARA,GAIhB,QAAS+C,GAAO/C,GACd,MAAe,QAARA,EAIT,QAAS6D,GAAkB7D,GACzB,MAAc,OAAPA,EAIT,QAAS8C,GAAS9C,GAChB,MAAsB,gBAARA,GAIhB,QAAS2B,GAAS3B,GAChB,MAAsB,gBAARA,GAIhB,QAAS8D,GAAS9D,GAChB,MAAsB,gBAARA,GAIhB,QAASc,GAAYd,GACnB,WAAe,KAARA,EAIT,QAASkC,GAAS6B,GAChB,MAAOC,GAASD,IAA8B,oBAAvBE,EAAeF,GAIxC,QAASC,GAAShE,GAChB,MAAsB,gBAARA,IAA4B,OAARA,EAIpC,QAASoC,GAAO8B,GACd,MAAOF,GAASE,IAA4B,kBAAtBD,EAAeC,GAIvC,QAASlC,GAAQjR,GACf,MAAOiT,GAASjT,KACW,mBAAtBkT,EAAelT,IAA2BA,YAAaS,QAI9D,QAASiQ,GAAWzB,GAClB,MAAsB,kBAARA,GAIhB,QAASmE,GAAYnE,GACnB,MAAe,QAARA,GACe,iBAARA,IACQ,gBAARA,IACQ,gBAARA,IACQ,gBAARA,QACQ,KAARA,EAMhB,QAASiE,GAAe/S,GACtB,MAAOyG,QAAOxF,UAAUmL,SAAS1L,KAAKV,GAIxC,QAASkT,GAAIpT,GACX,MAAOA,GAAI,GAAK,IAAMA,EAAEsM,SAAS,IAAMtM,EAAEsM,SAAS,IAQpD,QAAS+G,KACP,GAAIH,GAAI,GAAI7B,MACRiC,GAAQF,EAAIF,EAAEK,YACNH,EAAIF,EAAEM,cACNJ,EAAIF,EAAEO,eAAe5G,KAAK,IACtC,QAAQqG,EAAEQ,UAAWC,EAAOT,EAAEU,YAAaN,GAAMzG,KAAK,KAqCxD,QAAS1B,GAAeC,EAAKC,GAC3B,MAAO1E,QAAOxF,UAAUgK,eAAevK,KAAKwK,EAAKC,GAnjBnD,GAAIwI,GAAe,UACnBlT,GAAQmT,OAAS,SAAS1T,GACxB,IAAKuQ,EAASvQ,GAAI,CAEhB,IAAK,GADD2T,MACK5T,EAAI,EAAGA,EAAIuJ,UAAU7I,OAAQV,IACpC4T,EAAQpK,KAAKyF,EAAQ1F,UAAUvJ,IAEjC,OAAO4T,GAAQlH,KAAK,KAsBtB,IAAK,GAnBD1M,GAAI,EACJsJ,EAAOC,UACPR,EAAMO,EAAK5I,OACXqP,EAAM+B,OAAO7R,GAAG8G,QAAQ2M,EAAc,SAAS7H,GACjD,GAAU,OAANA,EAAY,MAAO,GACvB,IAAI7L,GAAK+I,EAAK,MAAO8C,EACrB,QAAQA,GACN,IAAK,KAAM,MAAOiG,QAAOxI,EAAKtJ,KAC9B,KAAK,KAAM,MAAO6T,QAAOvK,EAAKtJ,KAC9B,KAAK,KACH,IACE,MAAOsC,MAAKC,UAAU+G,EAAKtJ,MAC3B,MAAO8T,GACP,MAAO,aAEX,QACE,MAAOjI,MAGJA,EAAIvC,EAAKtJ,GAAIA,EAAI+I,EAAK8C,EAAIvC,IAAOtJ,GACpC4R,EAAO/F,KAAOgH,EAAShH,GACzBkE,GAAO,IAAMlE,EAEbkE,GAAO,IAAMd,EAAQpD,EAGzB,OAAOkE,IAOTvP,EAAQuT,UAAY,SAASrF,EAAIsF,GAa/B,QAASC,KACP,IAAKC,EAAQ,CACX,GAAI9K,EAAQ+K,iBACV,KAAM,IAAI9T,OAAM2T,EACP5K,GAAQgL,iBACjBC,QAAQC,MAAMN,GAEdK,QAAQnR,MAAM8Q,GAEhBE,GAAS,EAEX,MAAOxF,GAAGjF,MAAM1I,KAAMwI,WAtBxB,GAAIoG,EAAYhO,EAAOyH,SACrB,MAAO,YACL,MAAO5I,GAAQuT,UAAUrF,EAAIsF,GAAKvK,MAAM1I,KAAMwI,WAIlD,KAA8B,IAA1BH,EAAQmL,cACV,MAAO7F,EAGT,IAAIwF,IAAS,CAeb,OAAOD,GAIT,IACIO,GADAC,IAEJjU,GAAQkU,SAAW,SAASvC,GAI1B,GAHIxC,EAAY6E,KACdA,EAAepL,EAAQQ,IAAI+K,YAAc,IAC3CxC,EAAMA,EAAIyC,eACLH,EAAOtC,GACV,GAAI,GAAInB,QAAO,MAAQmB,EAAM,MAAO,KAAK0C,KAAKL,GAAe,CAC3D,GAAIM,GAAM1L,EAAQ0L,GAClBL,GAAOtC,GAAO,WACZ,GAAI6B,GAAMxT,EAAQmT,OAAOlK,MAAMjJ,EAAS+I,UACxC8K,SAAQnR,MAAM,YAAaiP,EAAK2C,EAAKd,QAGvCS,GAAOtC,GAAO,YAGlB,OAAOsC,GAAOtC,IAoChB3R,EAAQyO,QAAUA,EAIlBA,EAAQO,QACNuF,MAAU,EAAG,IACbC,QAAY,EAAG,IACfC,WAAe,EAAG,IAClBC,SAAa,EAAG,IAChBC,OAAW,GAAI,IACfC,MAAU,GAAI,IACdC,OAAW,GAAI,IACfC,MAAU,GAAI,IACdC,MAAU,GAAI,IACdC,OAAW,GAAI,IACfC,SAAa,GAAI,IACjBC,KAAS,GAAI,IACbC,QAAY,GAAI,KAIlB1G,EAAQiB,QACN0F,QAAW,OACXC,OAAU,SACVC,QAAW,SACXhR,UAAa,OACbiR,KAAQ,OACRC,OAAU,QACVC,KAAQ,UAER3K,OAAU,OAkRZ9K,EAAQ4F,QAAUA,EAKlB5F,EAAQiP,UAAYA,EAKpBjP,EAAQoR,OAASA,EAKjBpR,EAAQkS,kBAAoBA,EAK5BlS,EAAQmR,SAAWA,EAKnBnR,EAAQgQ,SAAWA,EAKnBhQ,EAAQmS,SAAWA,EAKnBnS,EAAQmP,YAAcA,EAKtBnP,EAAQuQ,SAAWA,EAKnBvQ,EAAQqS,SAAWA,EAKnBrS,EAAQyQ,OAASA,EAMjBzQ,EAAQqQ,QAAUA,EAKlBrQ,EAAQ8P,WAAaA,EAUrB9P,EAAQwS,YAAcA,EAEtBxS,EAAQ0V,SAAWxW,EAAQ,qBAY3B,IAAI8T,IAAU,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACxD,MAAO,MAAO,MAa5BhT,GAAQ2V,IAAM,WACZ9B,QAAQ8B,IAAI,UAAWjD,IAAa1S,EAAQmT,OAAOlK,MAAMjJ,EAAS+I,aAiBpE/I,EAAQ0B,SAAWxC,EAAQ,YAE3Bc,EAAQiE,QAAU,SAAS2R,EAAQC,GAEjC,IAAKA,IAAQxD,EAASwD,GAAM,MAAOD,EAInC,KAFA,GAAI3P,GAAOD,OAAOC,KAAK4P,GACnBrW,EAAIyG,EAAK/F,OACNV,KACLoW,EAAO3P,EAAKzG,IAAMqW,EAAI5P,EAAKzG,GAE7B,OAAOoW,MAON3V,KAAKM,KAAKrB,EAAQ,YAA8B,mBAAXiC,QAAyBA,OAAyB,mBAATkC,MAAuBA,KAAyB,mBAAXC,QAAyBA,aAC5IwS,qBAAqB,GAAGC,SAAW,EAAErU,SAAW,IAAIsU,cAAc,SAAS9W,EAAQkB,EAAOJ,IAC7F,SAAW4I,GA+CX,QAASqN,GAAOjV,GAIRA,EADkB,gBAAXA,IAEH+C,IAAK/C,GAGAA,MAGbT,KAAKS,OAASA,EAGiB,kBAApBA,GAAOL,SAEdJ,KAAKI,SAAW,GAAIK,GAAOL,SAASJ,MAGhCqI,EAAQO,QAGR5I,KAAKI,SAAW,IAAKzB,EAAQ,oCAAoCqB,MAGjEA,KAAKI,SAAW,IAAKzB,EAAQ,mCAAmCqB,MAKxE0V,EAAOC,eAAe3V,MAvC1B,GAAIF,GAAWnB,EAAQ,mBACnBuE,EAAQvE,EAAQ,eA4CpB+W,GAAOE,QAAU,QAMjBF,EAAO5V,SAAWA,EAMlB4V,EAAOxS,MAAQA,EASfwS,EAAOzV,UAAU4V,aAAe,SAASC,EAAMxV,GAG3C,GAAIH,GAAQ,GAAI+C,GAAMlD,KAAKS,OAAQqV,EAWnC,OARA9V,MAAKI,SAASF,QAAQC,GAGlBG,GACAH,EAAME,QAAQC,GAIXH,GAIXN,EAAOJ,QAAUiW,EAEjBA,EAAOC,eAAiB,SAASD,GAM7BA,EAAOK,UASH5P,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,OACRgC,KAAM,YACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASC,EAAY3V,GAC3B,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,MACRgC,KAAM,yBACNC,YACI2S,WAAYA,IAEjB3V,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,eACRV,OAAQ,MACRgC,KAAM,YACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASF,EAAY1S,EAASjD,GAClC,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,MACRgC,KAAM,yBACNC,YACI2S,WAAYA,GAEhB1S,QAASA,GACVjD,IAUP8V,QAAS,SAAS7S,EAASjD,GACvB,MAAOoV,GAAOG,cACV9T,OAAQ,kBACRV,OAAQ,OACRgC,KAAM,oBACNE,QAASA,GACVjD,IAUP+V,aAAc,SAASJ,EAAY3V,GAC/B,MAAOoV,GAAOG,cACV9T,OAAQ,uBACRV,OAAQ,MACRgC,KAAM,6BACNC,YACI2S,WAAYA,IAEjB3V,KASXoV,EAAOY,KASHvI,KAAM,SAASxK,EAASjD,GACpB,MAAOoV,GAAOG,cACV9T,OAAQ,WACRV,OAAQ,OACRgC,KAAM,WACNE,QAASA,GACVjD,KASXoV,EAAOa,UASHpQ,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,OACRgC,KAAM,YACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASQ,EAAKlW,GACpB,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,MACRgC,KAAM,kBACNC,YACIkT,IAAKA,IAEVlW,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,eACRV,OAAQ,MACRgC,KAAM,YACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASK,EAAKjT,EAASjD,GAC3B,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,MACRgC,KAAM,kBACNC,YACIkT,IAAKA,GAETjT,QAASA,GACVjD,KASXoV,EAAOe,SASHtQ,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,gBACRV,OAAQ,OACRgC,KAAM,WACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASU,EAAapW,GAC5B,MAAOoV,GAAOG,cACV9T,OAAQ,kBACRV,OAAQ,MACRgC,KAAM,yBACNC,YACIoT,YAAaA,IAElBpW,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,cACRV,OAAQ,MACRgC,KAAM,WACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASO,EAAanT,EAASjD,GACnC,MAAOoV,GAAOG,cACV9T,OAAQ,gBACRV,OAAQ,MACRgC,KAAM,yBACNC,YACIoT,YAAaA,GAEjBnT,QAASA,GACVjD,IAUPqW,OAAQ,SAASD,EAAapW,GAC1B,MAAOoV,GAAOG,cACV9T,OAAQ,gBACRV,OAAQ,SACRgC,KAAM,yBACNC,YACIoT,YAAaA,IAElBpW,KASXoV,EAAOkB,eASHzQ,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,sBACRV,OAAQ,OACRgC,KAAM,iBACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASa,EAAQvW,GACvB,MAAOoV,GAAOG,cACV9T,OAAQ,wBACRV,OAAQ,MACRgC,KAAM,0BACNC,YACIuT,OAAQA,IAEbvW,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,oBACRV,OAAQ,MACRgC,KAAM,iBACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASU,EAAQtT,EAASjD,GAC9B,MAAOoV,GAAOG,cACV9T,OAAQ,sBACRV,OAAQ,MACRgC,KAAM,0BACNC,YACIuT,OAAQA,GAEZtT,QAASA,GACVjD,KASXoV,EAAOoB,YASH3Q,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,OACRgC,KAAM,cACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASe,EAAczW,GAC7B,MAAOoV,GAAOG,cACV9T,OAAQ,qBACRV,OAAQ,MACRgC,KAAM,6BACNC,YACIyT,aAAcA,IAEnBzW,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,iBACRV,OAAQ,MACRgC,KAAM,cACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASY,EAAcxT,EAASjD,GACpC,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,MACRgC,KAAM,6BACNC,YACIyT,aAAcA,GAElBxT,QAASA,GACVjD,IAUPqW,OAAQ,SAASI,EAAczW,GAC3B,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,SACRgC,KAAM,6BACNC,YACIyT,aAAcA,IAEnBzW,IAWP0W,YAAa,SAASD,EAAcxT,EAASjD,GACzC,MAAOoV,GAAOG,cACV9T,OAAQ,wBACRV,OAAQ,OACRgC,KAAM,mCACNC,YACIyT,aAAcA,GAElBxT,QAASA,GACVjD,IAWP2W,YAAa,SAASF,EAAcG,EAAmB5W,GACnD,MAAOoV,GAAOG,cACV9T,OAAQ,wBACRV,OAAQ,SACRgC,KAAM,uDACNC,YACIyT,aAAcA,EACdG,kBAAmBA,IAExB5W,IAYP6W,YAAa,SAASJ,EAAcG,EAAmB3T,EAASjD,GAC5D,MAAOoV,GAAOG,cACV9T,OAAQ,wBACRV,OAAQ,MACRgC,KAAM,uDACNC,YACIyT,aAAcA,EACdG,kBAAmBA,GAEvB3T,QAASA,GACVjD,KASXoV,EAAO0B,UASHjR,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,OACRgC,KAAM,YACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASqB,EAAY/W,GAC3B,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,MACRgC,KAAM,yBACNC,YACI+T,WAAYA,IAEjB/W,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,eACRV,OAAQ,MACRgC,KAAM,YACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASkB,EAAY9T,EAASjD,GAClC,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,MACRgC,KAAM,yBACNC,YACI+T,WAAYA,GAEhB9T,QAASA,GACVjD,IAUPqW,OAAQ,SAASU,EAAY/W,GACzB,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,SACRgC,KAAM,yBACNC,YACI+T,WAAYA,IAEjB/W,KASXoV,EAAO4B,YASHnR,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,kBACRV,OAAQ,OACRgC,KAAM,cACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASuB,EAAajX,GAC5B,MAAOoV,GAAOG,cACV9T,OAAQ,oBACRV,OAAQ,MACRgC,KAAM,4BACNC,YACIiU,YAAaA,IAElBjX,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,gBACRV,OAAQ,MACRgC,KAAM,cACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASoB,EAAahU,EAASjD,GACnC,MAAOoV,GAAOG,cACV9T,OAAQ,kBACRV,OAAQ,MACRgC,KAAM,4BACNC,YACIiU,YAAaA,GAEjBhU,QAASA,GACVjD,KASXoV,EAAO8B,eASHrR,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,sBACRV,OAAQ,OACRgC,KAAM,iBACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASyB,EAAmBnX,GAClC,MAAOoV,GAAOG,cACV9T,OAAQ,wBACRV,OAAQ,MACRgC,KAAM,qCACNC,YACImU,kBAAmBA,IAExBnX,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,oBACRV,OAAQ,MACRgC,KAAM,iBACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAASsB,EAAmBlU,EAASjD,GACzC,MAAOoV,GAAOG,cACV9T,OAAQ,sBACRV,OAAQ,MACRgC,KAAM,qCACNC,YACImU,kBAAmBA,GAEvBlU,QAASA,GACVjD,IAUPqW,OAAQ,SAASc,EAAmBnX,GAChC,MAAOoV,GAAOG,cACV9T,OAAQ,sBACRV,OAAQ,SACRgC,KAAM,qCACNC,YACImU,kBAAmBA,IAExBnX,KASXoV,EAAOgC,OASHvR,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,cACRV,OAAQ,OACRgC,KAAM,SACNE,QAASA,GACVjD,IAUP0V,SAAU,SAAS2B,EAASrX,GACxB,MAAOoV,GAAOG,cACV9T,OAAQ,gBACRV,OAAQ,MACRgC,KAAM,mBACNC,YACIqU,QAASA,IAEdrX,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,YACRV,OAAQ,MACRgC,KAAM,SACNlD,MAAOA,GACRG,IAWPsX,YAAa,SAASD,EAASpU,EAASjD,GACpC,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,OACRgC,KAAM,2BACNC,YACIqU,QAASA,GAEbpU,QAASA,GACVjD,IAWPuX,cAAe,SAASF,EAASxX,EAAOG,GAOpC,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,qBACRV,OAAQ,MACRgC,KAAM,2BACNC,YACIqU,QAASA,GAEbxX,MAAOA,GACRG,IAWPwX,eAAgB,SAASH,EAAS1B,EAAY3V,GAC1C,MAAOoV,GAAOG,cACV9T,OAAQ,sBACRV,OAAQ,SACRgC,KAAM,wCACNC,YACIqU,QAASA,EACT1B,WAAYA,IAEjB3V,KASXoV,EAAOqC,UASH5R,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,OACRgC,KAAM,qBACNE,QAASA,GACVjD,IAWP0V,SAAU,SAASC,EAAY+B,EAAY1X,GACvC,MAAOoV,GAAOG,cACV9T,OAAQ,mBACRV,OAAQ,MACRgC,KAAM,+CACNC,YACI2S,WAAYA,EACZ+B,WAAYA,IAEjB1X,IAWP4V,KAAM,SAASD,EAAY9V,EAAOG,GAO9B,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,eACRV,OAAQ,MACRgC,KAAM,kCACNC,YACI2S,WAAYA,GAEhB9V,MAAOA,GACRG,IAYP6V,OAAQ,SAASF,EAAY+B,EAAYzU,EAASjD,GAC9C,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,MACRgC,KAAM,+CACNC,YACI2S,WAAYA,EACZ+B,WAAYA,GAEhBzU,QAASA,GACVjD,IAWPqW,OAAQ,SAASV,EAAY+B,EAAY1X,GACrC,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,SACRgC,KAAM,+CACNC,YACI2S,WAAYA,EACZ+B,WAAYA,IAEjB1X,KASXoV,EAAOuC,QASH9R,OAAQ,SAAS5C,EAASjD,GACtB,MAAOoV,GAAOG,cACV9T,OAAQ,eACRV,OAAQ,OACRgC,KAAM,UACNE,QAASA,GACVjD,IAUP0V,SAAU,SAASkC,EAAU5X,GACzB,MAAOoV,GAAOG,cACV9T,OAAQ,iBACRV,OAAQ,MACRgC,KAAM,qBACNC,YACI4U,SAAUA,IAEf5X,IAUP4V,KAAM,SAAS/V,EAAOG,GAOlB,MALqB,kBAAVH,KACPG,EAAWH,EACXA,MAAQ4D,IAGL2R,EAAOG,cACV9T,OAAQ,aACRV,OAAQ,MACRgC,KAAM,UACNlD,MAAOA,GACRG,IAWP6V,OAAQ,SAAS+B,EAAU3U,EAASjD,GAChC,MAAOoV,GAAOG,cACV9T,OAAQ,eACRV,OAAQ,MACRgC,KAAM,qBACNC,YACI4U,SAAUA,GAEd3U,QAASA,GACVjD,QAOZZ,KAAKM,KAAKrB,EAAQ,eAClBwZ,kBAAkB,EAAEC,kCAAkC,EAAEC,iCAAiC,EAAEC,eAAe,EAAE9C,SAAW","file":"okanjo-sdk.min.js","sourcesContent":["require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/*\n * Date: 1/26/16 11:59 AM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Request handler\n * @param {Client} [client]\n * @constructor\n */\nfunction Provider(client) {\n    this.client = client;\n}\n\n/**\n * Compiles the query into an executable request\n * @param {Query} query – The query to build\n */\nProvider.prototype.compile = function(query) {\n    var provider = this;\n\n    // Attach execute function to the query\n    query.execute = function(callback) {\n        return provider.execute(query, callback);\n    };\n\n    // Future: Attach cache/execute function to the query\n};\n\n\n/**\n * Executes the query\n * @param {Query} query - The query to execute\n * @param {requestCallback} callback – Callback to fire when request is completed\n * @abstract\n */\nProvider.prototype.execute = function(query, callback) {\n    //console.error('Okanjo Base Provider Execute:', query);\n    callback(new Error('Transport provider not implemented'), null);\n};\n\n/**\n * Fires the client-given unauthorized hook in the event a response comes back 401-Unauthorized\n * which generally means, your session is dead, jim.\n * @param {object} err - The response payload\n * @param {Query} query - The offending query\n * @return {*}\n * @protected\n */\nProvider.prototype._unauthorizedHook = function(err, query) {\n    if (typeof this.client.config.onUnauthorizedResponse === \"function\") {\n        this.client.config.onUnauthorizedResponse(err, query);\n    }\n};\n\n\n/**\n * @callback requestCallback\n * @param {object|null} error\n * @param {object|null} response\n */\n\nmodule.exports = Provider;\n},{}],2:[function(require,module,exports){\n(function (global){\n/*\n * Date: 10/20/16 4:30 PM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar util = require('util'),\n    timers = require('timers'),\n    setImmediate = global.setImmediate /* istanbul ignore next */ || timers.setImmediate,\n    Provider = require('../provider');\n\n/**\n * Request handler\n * @param {Client} [client]\n * @constructor\n */\nfunction FetchProvider(client) {\n    Provider.call(this, client);\n\n    /**\n     * Where to send requests to\n     * @type {string}\n     */\n    this.rpcHost = client.config.rpcHost || \"/rpc\";\n\n    /**\n     * What method is the RPC router expecting\n     * @type {string}\n     */\n    this.rpcMethod = client.config.rpcMethod || 'POST';\n\n\n}\n\nutil.inherits(FetchProvider, Provider);\n\n\n/**\n * Executes the query\n * @param {Query} query - The query to execute\n * @param callback – Callback to fire when request is completed\n * @abstract\n */\nFetchProvider.prototype.execute = function(query, callback) {\n\n    var req = {\n        method: this.rpcMethod,\n        body: JSON.stringify(query),\n        credentials: 'same-origin', // preserve authentication\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json; charset=utf-8'\n        }\n    };\n\n    return fetch(this.rpcHost + '?a=' + encodeURIComponent(query.action), req)\n        .then(function(res) {\n            return res.json();\n        })\n        .then(function(res) {\n            if (res.error) {\n                // Error response from API\n                return Promise.reject(res);\n            } else {\n                // Browserify should polyfill setImmediate\n                if (callback) {\n                    return setImmediate(function() {\n                        callback(null, res);\n                    });\n                }\n                return Promise.resolve(res);\n            }\n        })\n        .catch(function(err) {\n            if (!err || !err.statusCode) {\n                err = {\n                    statusCode: 503,\n                    error: (err instanceof Error ? err.message : /* istanbul ignore next: not worth testing err vs stats */ err),\n                    message: \"Something went wrong\",\n                    attributes: {\n                        source: 'okanjo.providers.FetchProvider',\n                        wrappedError: err\n                    }\n                };\n            }\n\n            // Check for unauthorized hook case\n            if (err.statusCode === 401) this._unauthorizedHook(err, query);\n\n            if (callback) {\n                return setImmediate(function() {\n                    callback(err, null);\n                });\n            }\n            return Promise.reject(err);\n        }.bind(this));\n};\n\n\n/**\n * @callback requestCallback\n * @param {object|null} error\n * @param {object|null} response\n */\n\nmodule.exports = FetchProvider;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../provider\":1,\"timers\":11,\"util\":13}],3:[function(require,module,exports){\n/*\n * Date: 1/26/16 11:59 AM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar sdkUtil = require('./util'),\n    querystring = require('querystring');\n\n/**\n * Query container\n * @param {object} [base] - Base query to clone\n * @param {object} [options] - Options to override\n * @constructor\n */\nfunction Query(base, options) {\n\n    /**\n     * Resource method action / route id\n     * @type {string}\n     */\n    this.action = null;\n\n    /**\n     * Request method\n     * @example `GET` or `PUT` or `POST` or `DELETE`\n     * @type {string}\n     */\n    this.method = null;\n\n    /**\n     * Request path\n     * @type {string}\n     */\n    this.path = '';\n\n    /**\n     * Request path parameters\n     * @type {object}\n     */\n    this.pathParams = {};\n\n    /**\n     * Request query arguments\n     * @type {object|null}\n     */\n    this.query = null;\n\n    /**\n     * Request payload\n     * @type {object|null}\n     */\n    this.payload = null;\n\n    /**\n     * API key\n     * @type {null}\n     */\n    this.key = null;\n\n    /**\n     * Authorization token\n     * @type {null}\n     */\n    this.sessionToken = null;\n\n    this._extend(base);\n    this._extend(options, true);\n}\n\n\n\n/**\n * Copies and clones properties from the given object\n * @param extra\n * @param overrideAll\n * @private\n */\nQuery.prototype._extend = function(extra, overrideAll) {\n    if (extra) {\n        if (extra.action !== undefined) this.setAction(extra.action);\n        if (extra.method !== undefined) this.setMethod(extra.method);\n        if (extra.path !== undefined) this.setPath(extra.path);\n        if (extra.pathParams !== undefined) this.setPathParams(extra.pathParams);\n        if (extra.query !== undefined) this.where(extra.query);\n        if (extra.payload !== undefined) this.data(extra.payload);\n\n        if (overrideAll) {\n            if (extra.key !== undefined) this.setKey(extra.key);\n            if (extra.sessionToken !== undefined) this.setSessionToken(extra.sessionToken);\n        }\n    }\n};\n\n\n/**\n * Returns the real URL path of the request\n * @return {string|Error}\n */\nQuery.prototype.getRealPath = function() {\n    return sdkUtil.buildPath(this.path, this.pathParams);\n};\n\n\n/**\n * Returns the full URL path including the querystring\n * @return {string|Error}\n */\nQuery.prototype.getFullPath = function() {\n    var path = this.getRealPath();\n    if (path && this.query) {\n        return path + '?' + querystring.stringify(this.query);\n    } else {\n        return path;\n    }\n};\n\n/**\n * Sets the method action / route id\n * @param {string} action\n * @return {Query}\n */\nQuery.prototype.setAction = function(action) { this.action = action; return this; };\n\n/**\n * Sets the HTTP method on the request\n * @param {string} method\n * @return {Query}\n */\nQuery.prototype.setMethod = function(method) { this.method = method; return this; };\n\n\n/**\n * Sets the URL path template on the request\n * @param {string} path\n * @return {Query}\n */\nQuery.prototype.setPath = function(path) { this.path = path; return this; };\n\n/**\n * Sets the URL path parameters on the request\n * @param {object} params\n * @return {Query}\n */\nQuery.prototype.setPathParams = function(params) { this.pathParams = sdkUtil.copy(this.pathParams, params); return this; };\n\n/**\n * Sets the query parameters on the request\n * @param {object} params\n * @return {Query}\n */\nQuery.prototype.where = function(params) { this.query = sdkUtil.copy(this.query, params); return this; };\n\n/**\n * Sets the payload on the request\n * @param {object} doc\n * @return {Query}\n */\nQuery.prototype.data = function(doc) { this.payload = sdkUtil.copy(this.payload, doc); return this; };\n\n/**\n * Sets the pagination skip count on the request\n * @param {number} count\n * @return {Query}\n */\nQuery.prototype.skip = function(count) { this.query = sdkUtil.copy(this.query, { skip: count }); return this; };\n\n/**\n * Sets the pagination return count on the request\n * @param {number} count\n * @return {Query}\n */\nQuery.prototype.take = function(count) { this.query = sdkUtil.copy(this.query, { take: count }); return this; };\n\n/**\n * Sets the API key to use on the request\n * @param {string} key\n * @return {Query}\n */\nQuery.prototype.setKey = function(key) { this.key = key; return this; };\n\n\n/**\n * Sets the authorization context of the request\n * @param {string} sessionToken\n * @return {Query}\n */\nQuery.prototype.setSessionToken = function(sessionToken) { this.sessionToken = sessionToken; return this; };\n\n\nmodule.exports = Query;\n},{\"./util\":4,\"querystring\":10}],4:[function(require,module,exports){\n/*\n * Date: 1/26/16 12:01 PM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Simple, deep, key-value copier\n * @param {*} destination – Target object or empty to make brand new copy\n * @param {*} source – Object to make a duplicate of\n * @return {*} – The resulting object, which might be the same as dest unless source was a value not a reference\n * @author Kevin Fitzgerald\n */\nfunction copy(destination, source) {\n    if (source !== null && typeof source === \"object\") {\n        if (Array.isArray(source)) {\n            destination = destination || [];\n            source.forEach(function(val, index) {\n                destination[index] = copy(destination[index], val);\n            });\n        } else {\n            destination = destination || {};\n            Object.keys(source).forEach(function(key) {\n                destination[key] = copy(destination[key], source[key]);\n            });\n        }\n    } else {\n        destination = source;\n    }\n\n    return destination;\n}\n\n\nvar extractParams = /\\{([a-zA-Z_]+)}/g;\n\n/**\n * Builds the final URL path given replaceable param names\n * @param {string} path - Route path\n * @param {object} params - Parameter key value pairs\n * @return {string|Error} Final path or Error if missing a parameter\n */\nfunction buildPath(path, params) {\n\n    var resultPath = path, p, token, name;\n\n    // Pull out the expected parameters\n    while ((p = extractParams.exec(path)) !== null) {\n\n        token = p[0];\n        name = p[1];\n\n        // Make sure the param was given\n        if (params[name]) {\n            resultPath = resultPath.replace(token, encodeURIComponent(params[name]));\n        } else {\n            return new Error('Path parameter ' + token + ' required to call ' + path);\n        }\n    }\n\n    return resultPath;\n}\n\n\n/**\n *\n * @type {{copy: copy}}\n */\nmodule.exports = {\n    copy: copy,\n    buildPath: buildPath\n};\n},{}],5:[function(require,module,exports){\n\n},{}],6:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],7:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],8:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],9:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":8,\"./encode\":9}],11:[function(require,module,exports){\n(function (setImmediate,clearImmediate){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n},{\"process/browser.js\":7,\"timers\":11}],12:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],13:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./support/isBuffer\":12,\"_process\":7,\"inherits\":6}],\"okanjo-sdk\":[function(require,module,exports){\n(function (process){\n/*\n * Date: 1/26/16 11:59 AM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar Provider = require('../lib/provider'),\n    Query = require('../lib/query');\n\n/**\n * SDK Base\n * @param {object} [config] Client options\n * @namespace\n * @constructor\n */\nfunction Client(config) {\n\n    // Allow client to be initialized as:  var api = new Client(\"api_key\");\n    if (typeof config === \"string\") {\n        config = {\n            key: config\n        };\n    } else {\n        config = config || {};\n    }\n\n    this.config = config;\n\n    // Connect the right default provider based on runtime context\n    if (typeof config.provider === \"function\") {\n        // Context is provided in the config - use the constructor as-is\n        this.provider = new config.provider(this);\n    } else {\n        // Detect context\n        if (process.browser) {\n            // Running in browser - default to proxy mode\n            //this.provider = new (require('../lib/providers/jquery_provider'))(this);\n            this.provider = new (require('../lib/providers/fetch_provider'))(this);\n        } else {\n            // Running in Node - Use the HTTP provider by default to make real requests\n            this.provider = new (require('../lib/providers/http_provider'))(this);\n        }\n    }\n\n    // Attach resources\n    Client._bindResources(this);\n}\n\n/**\n * SDK Version\n */\nClient.Version = '1.6.1';\n\n/**\n * Expose the Provider base class\n * @type {Provider}\n */\nClient.Provider = Provider;\n\n/**\n * Expose the Query base class\n * @type {Query}\n */\nClient.Query = Query;\n\n\n/**\n * Routes a request through the client's registered transport provider\n * @param {object} spec - Query specifications\n * @param {function} callback\n * @return {Query} - A compiled query, ready to rock and roll, or be modified and executed yourself\n */\nClient.prototype._makeRequest = function(spec, callback) {\n\n    // Build the query\n    var query = new Query(this.config, spec);\n\n    // Compile the query\n    this.provider.compile(query);\n\n    // If we have a callback, execute the request\n    if (callback) {\n        query.execute(callback);\n    }\n\n    // Return the query for reuse or manual execution\n    return query;\n};\n\n\nmodule.exports = Client;\n/* istanbul ignore next: out of scope */\nClient._bindResources = function(Client) {\n    \n    /**\n     * Accounts\n     * @namespace Client.accounts\n     */\n    Client.accounts = {\n        \n        /**\n         * Registers a new Okanjo account\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'account.create',\n                method: 'POST',\n                path: '/accounts',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an account\n         * @param {string} account_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        retrieve: function(account_id, callback) {\n            return Client._makeRequest({\n                action: 'account.retrieve',\n                method: 'GET',\n                path: '/accounts/{account_id}',\n                pathParams: {\n                    account_id: account_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns manageable accounts, or accounts on a given resource.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'account.list',\n                method: 'GET',\n                path: '/accounts',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates an account\n         * @param {string} account_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        update: function(account_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'account.update',\n                method: 'PUT',\n                path: '/accounts/{account_id}',\n                pathParams: {\n                    account_id: account_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Requests a password reset for an account with the given email address\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        recover: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'account.recover',\n                method: 'POST',\n                path: '/accounts/recover',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an account's access control list. This provides an overview of what the account has access to.\n         * @param {string} account_id – Account id for the acl to be retrieved.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        retrieve_acl: function(account_id, callback) {\n            return Client._makeRequest({\n                action: 'account.retrieve_acl',\n                method: 'GET',\n                path: '/accounts/{account_id}/acl',\n                pathParams: {\n                    account_id: account_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Ads\n     * @namespace Client.ads\n     */\n    Client.ads = {\n        \n        /**\n         * Returns content to fill a placement.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.ads#\n         */\n        fill: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'ads.fill',\n                method: 'POST',\n                path: '/content',\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Articles\n     * @namespace Client.articles\n     */\n    Client.articles = {\n        \n        /**\n         * Creates an article for distribution\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'article.create',\n                method: 'POST',\n                path: '/articles',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an article\n         * @param {string} url – URL of the article\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        retrieve: function(url, callback) {\n            return Client._makeRequest({\n                action: 'article.retrieve',\n                method: 'GET',\n                path: '/articles/{url}',\n                pathParams: {\n                    url: url\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists articles that meet the given criteria.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'article.list',\n                method: 'GET',\n                path: '/articles',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Modifies an article\n         * @param {string} url – URL of the article\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        update: function(url, payload, callback) {\n            return Client._makeRequest({\n                action: 'article.update',\n                method: 'PUT',\n                path: '/articles/{url}',\n                pathParams: {\n                    url: url\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Domains\n     * @namespace Client.domains\n     */\n    Client.domains = {\n        \n        /**\n         * Associates a domain with the property.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'domain.create',\n                method: 'POST',\n                path: '/domains',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a domain with the given name.\n         * @param {string} domain_name – Fully qualified domain name\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        retrieve: function(domain_name, callback) {\n            return Client._makeRequest({\n                action: 'domain.retrieve',\n                method: 'GET',\n                path: '/domains/{domain_name}',\n                pathParams: {\n                    domain_name: domain_name\n                }\n            }, callback);\n        },\n        \n        /**\n         * List domains with the given criteria.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'domain.list',\n                method: 'GET',\n                path: '/domains',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a domain with the given name.\n         * @param {string} domain_name – Fully qualified domain name\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        update: function(domain_name, payload, callback) {\n            return Client._makeRequest({\n                action: 'domain.update',\n                method: 'PUT',\n                path: '/domains/{domain_name}',\n                pathParams: {\n                    domain_name: domain_name\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Dissociates a domain from its associated property.\n         * @param {string} domain_name – Fully qualified domain name\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        delete: function(domain_name, callback) {\n            return Client._makeRequest({\n                action: 'domain.delete',\n                method: 'DELETE',\n                path: '/domains/{domain_name}',\n                pathParams: {\n                    domain_name: domain_name\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Organizations\n     * @namespace Client.organizations\n     */\n    Client.organizations = {\n        \n        /**\n         * Creates a new organization under the current user.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'organization.create',\n                method: 'POST',\n                path: '/organizations',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Gets a particular organization if visible to the current user.\n         * @param {string} org_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        retrieve: function(org_id, callback) {\n            return Client._makeRequest({\n                action: 'organization.retrieve',\n                method: 'GET',\n                path: '/organizations/{org_id}',\n                pathParams: {\n                    org_id: org_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists organizations visible to the current user.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'organization.list',\n                method: 'GET',\n                path: '/organizations',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates an organization\n         * @param {string} org_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        update: function(org_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'organization.update',\n                method: 'PUT',\n                path: '/organizations/{org_id}',\n                pathParams: {\n                    org_id: org_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Placements\n     * @namespace Client.placements\n     */\n    Client.placements = {\n        \n        /**\n         * Creates a ProductMatch placement\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'placement.create',\n                method: 'POST',\n                path: '/placements',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a ProductMatch placement\n         * @param {string} placement_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        retrieve: function(placement_id, callback) {\n            return Client._makeRequest({\n                action: 'placement.retrieve',\n                method: 'GET',\n                path: '/placements/{placement_id}',\n                pathParams: {\n                    placement_id: placement_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * List ProductMatch placements\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'placement.list',\n                method: 'GET',\n                path: '/placements',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a ProductMatch placement\n         * @param {string} placement_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        update: function(placement_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'placement.update',\n                method: 'PUT',\n                path: '/placements/{placement_id}',\n                pathParams: {\n                    placement_id: placement_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a ProductMatch placement\n         * @param {string} placement_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        delete: function(placement_id, callback) {\n            return Client._makeRequest({\n                action: 'placement.delete',\n                method: 'DELETE',\n                path: '/placements/{placement_id}',\n                pathParams: {\n                    placement_id: placement_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Creates a placement test, used for A-B testing.\n         * @param {string} placement_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        create_test: function(placement_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'placement.create_test',\n                method: 'POST',\n                path: '/placements/{placement_id}/tests',\n                pathParams: {\n                    placement_id: placement_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a placement test.\n         * @param {string} placement_id – Object identifier.\n         * @param {string} placement_test_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        delete_test: function(placement_id, placement_test_id, callback) {\n            return Client._makeRequest({\n                action: 'placement.delete_test',\n                method: 'DELETE',\n                path: '/placements/{placement_id}/tests/{placement_test_id}',\n                pathParams: {\n                    placement_id: placement_id,\n                    placement_test_id: placement_test_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Updates a placement test.\n         * @param {string} placement_id – Object identifier.\n         * @param {string} placement_test_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        update_test: function(placement_id, placement_test_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'placement.update_test',\n                method: 'PUT',\n                path: '/placements/{placement_id}/tests/{placement_test_id}',\n                pathParams: {\n                    placement_id: placement_id,\n                    placement_test_id: placement_test_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Products\n     * @namespace Client.products\n     */\n    Client.products = {\n        \n        /**\n         * Creates a product\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'product.create',\n                method: 'POST',\n                path: '/products',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a product\n         * @param {string} product_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        retrieve: function(product_id, callback) {\n            return Client._makeRequest({\n                action: 'product.retrieve',\n                method: 'GET',\n                path: '/products/{product_id}',\n                pathParams: {\n                    product_id: product_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists products\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'product.list',\n                method: 'GET',\n                path: '/products',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a product\n         * @param {string} product_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        update: function(product_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'product.update',\n                method: 'PUT',\n                path: '/products/{product_id}',\n                pathParams: {\n                    product_id: product_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a product\n         * @param {string} product_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        delete: function(product_id, callback) {\n            return Client._makeRequest({\n                action: 'product.delete',\n                method: 'DELETE',\n                path: '/products/{product_id}',\n                pathParams: {\n                    product_id: product_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Properties\n     * @namespace Client.properties\n     */\n    Client.properties = {\n        \n        /**\n         * Creates a new property.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'property.create',\n                method: 'POST',\n                path: '/properties',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a property.\n         * @param {string} property_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        retrieve: function(property_id, callback) {\n            return Client._makeRequest({\n                action: 'property.retrieve',\n                method: 'GET',\n                path: '/properties/{property_id}',\n                pathParams: {\n                    property_id: property_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns accessible properties.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'property.list',\n                method: 'GET',\n                path: '/properties',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a property.\n         * @param {string} property_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        update: function(property_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'property.update',\n                method: 'PUT',\n                path: '/properties/{property_id}',\n                pathParams: {\n                    property_id: property_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Resource Sets\n     * @namespace Client.resource_sets\n     */\n    Client.resource_sets = {\n        \n        /**\n         * Creates a new resource set.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'resource_set.create',\n                method: 'POST',\n                path: '/resource-sets',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a resource set with the given name.\n         * @param {string} resource_set_name – Name of the resource set.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        retrieve: function(resource_set_name, callback) {\n            return Client._makeRequest({\n                action: 'resource_set.retrieve',\n                method: 'GET',\n                path: '/resource-sets/{resource_set_name}',\n                pathParams: {\n                    resource_set_name: resource_set_name\n                }\n            }, callback);\n        },\n        \n        /**\n         * List resource sets with the given criteria.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'resource_set.list',\n                method: 'GET',\n                path: '/resource-sets',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a resource set with the given name.\n         * @param {string} resource_set_name – Name of the resource set.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        update: function(resource_set_name, payload, callback) {\n            return Client._makeRequest({\n                action: 'resource_set.update',\n                method: 'PUT',\n                path: '/resource-sets/{resource_set_name}',\n                pathParams: {\n                    resource_set_name: resource_set_name\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Removes a resource set.\n         * @param {string} resource_set_name – Name of the resource set.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        delete: function(resource_set_name, callback) {\n            return Client._makeRequest({\n                action: 'resource_set.delete',\n                method: 'DELETE',\n                path: '/resource-sets/{resource_set_name}',\n                pathParams: {\n                    resource_set_name: resource_set_name\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Roles\n     * @namespace Client.roles\n     */\n    Client.roles = {\n        \n        /**\n         * Creates a role for the given resource\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'role.create',\n                method: 'POST',\n                path: '/roles',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a role.\n         * @param {string} role_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        retrieve: function(role_id, callback) {\n            return Client._makeRequest({\n                action: 'role.retrieve',\n                method: 'GET',\n                path: '/roles/{role_id}',\n                pathParams: {\n                    role_id: role_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Retrieves roles on a given resource.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'role.list',\n                method: 'GET',\n                path: '/roles',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Adds an account to a role.\n         * @param {string} role_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        add_account: function(role_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'role.add_account',\n                method: 'POST',\n                path: '/roles/{role_id}/members',\n                pathParams: {\n                    role_id: role_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * List accounts that belong to a role.\n         * @param {string} role_id – Object identifier.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        list_accounts: function(role_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'role.list_accounts',\n                method: 'GET',\n                path: '/roles/{role_id}/members',\n                pathParams: {\n                    role_id: role_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Removes an account from a role.\n         * @param {string} role_id – Object identifier.\n         * @param {string} account_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        remove_account: function(role_id, account_id, callback) {\n            return Client._makeRequest({\n                action: 'role.remove_account',\n                method: 'DELETE',\n                path: '/roles/{role_id}/members/{account_id}',\n                pathParams: {\n                    role_id: role_id,\n                    account_id: account_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Account Sessions\n     * @namespace Client.sessions\n     */\n    Client.sessions = {\n        \n        /**\n         * Starts a new account session\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'session.create',\n                method: 'POST',\n                path: '/accounts/sessions',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Gets an particular session.\n         * @param {string} account_id – Object identifier.\n         * @param {string} session_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        retrieve: function(account_id, session_id, callback) {\n            return Client._makeRequest({\n                action: 'session.retrieve',\n                method: 'GET',\n                path: '/accounts/{account_id}/sessions/{session_id}',\n                pathParams: {\n                    account_id: account_id,\n                    session_id: session_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns past and present sessions belonging to the account.\n         * @param {string} account_id – Object identifier.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        list: function(account_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'session.list',\n                method: 'GET',\n                path: '/accounts/{account_id}/sessions',\n                pathParams: {\n                    account_id: account_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a session belonging to the account.\n         * @param {string} account_id – Object identifier.\n         * @param {string} session_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        update: function(account_id, session_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'session.update',\n                method: 'PUT',\n                path: '/accounts/{account_id}/sessions/{session_id}',\n                pathParams: {\n                    account_id: account_id,\n                    session_id: session_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Closes the session, invalidating the `session_token`. The status of the session will become `ended`.\n         * @param {string} account_id – Object identifier.\n         * @param {string} session_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        delete: function(account_id, session_id, callback) {\n            return Client._makeRequest({\n                action: 'session.delete',\n                method: 'DELETE',\n                path: '/accounts/{account_id}/sessions/{session_id}',\n                pathParams: {\n                    account_id: account_id,\n                    session_id: session_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Stores\n     * @namespace Client.stores\n     */\n    Client.stores = {\n        \n        /**\n         * Creates a new store.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                action: 'store.create',\n                method: 'POST',\n                path: '/stores',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a store.\n         * @param {string} store_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        retrieve: function(store_id, callback) {\n            return Client._makeRequest({\n                action: 'store.retrieve',\n                method: 'GET',\n                path: '/stores/{store_id}',\n                pathParams: {\n                    store_id: store_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Retrieves accessible stores.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                action: 'store.list',\n                method: 'GET',\n                path: '/stores',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a store.\n         * @param {string} store_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        update: function(store_id, payload, callback) {\n            return Client._makeRequest({\n                action: 'store.update',\n                method: 'PUT',\n                path: '/stores/{store_id}',\n                pathParams: {\n                    store_id: store_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n\n};\n}).call(this,require('_process'))\n},{\"../lib/provider\":1,\"../lib/providers/fetch_provider\":2,\"../lib/providers/http_provider\":5,\"../lib/query\":3,\"_process\":7}]},{},[]);\n"]}
{"version":3,"file":"okanjo-sdk.min.js","sources":["okanjo-sdk.min.js"],"sourcesContent":["require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n},{\"./\":4,\"get-intrinsic\":9}],4:[function(require,module,exports){\n'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n},{\"function-bind\":8,\"get-intrinsic\":9}],5:[function(require,module,exports){\n'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n\n},{\"get-intrinsic\":9}],6:[function(require,module,exports){\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n},{\"./implementation\":7}],9:[function(require,module,exports){\n'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n},{\"function-bind\":8,\"has\":13,\"has-symbols\":10}],10:[function(require,module,exports){\n'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n},{\"./shams\":11}],11:[function(require,module,exports){\n'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n\n},{\"has-symbols/shams\":11}],13:[function(require,module,exports){\n'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n},{\"function-bind\":8}],14:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\n},{\"call-bind/callBound\":3,\"has-tostringtag/shams\":12}],16:[function(require,module,exports){\n'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n\n},{\"has-tostringtag/shams\":12}],17:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"available-typed-arrays\":1,\"call-bind/callBound\":3,\"es-abstract/helpers/getOwnPropertyDescriptor\":5,\"foreach\":6,\"has-tostringtag/shams\":12}],18:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],19:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],20:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":19,\"./encode\":20}],22:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n},{\"process/browser.js\":18,\"timers\":22}],23:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],24:[function(require,module,exports){\n// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n\n},{\"is-arguments\":15,\"is-generator-function\":16,\"is-typed-array\":17,\"which-typed-array\":26}],25:[function(require,module,exports){\n(function (process){(function (){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n}).call(this)}).call(this,require('_process'))\n},{\"./support/isBuffer\":23,\"./support/types\":24,\"_process\":18,\"inherits\":14}],26:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"available-typed-arrays\":1,\"call-bind/callBound\":3,\"es-abstract/helpers/getOwnPropertyDescriptor\":5,\"foreach\":6,\"has-tostringtag/shams\":12,\"is-typed-array\":17}],27:[function(require,module,exports){\n/*\n * Date: 1/26/16 11:59 AM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Request handler\n * @param {Client} [client]\n * @constructor\n */\nfunction Provider(client) {\n    this.client = client;\n}\n\n/**\n * Compiles the query into an executable request\n * @param {Query} query – The query to build\n */\nProvider.prototype.compile = function(query) {\n    var provider = this;\n\n    // Attach execute function to the query\n    query.execute = function(callback) {\n        return provider.execute(query, callback);\n    };\n\n    // Future: Attach cache/execute function to the query\n};\n\n\n/**\n * Executes the query\n * @param {Query} query - The query to execute\n * @param {requestCallback} callback – Callback to fire when request is completed\n * @abstract\n */\nProvider.prototype.execute = function(query, callback) {\n    //console.error('Okanjo Base Provider Execute:', query);\n    callback(new Error('Transport provider not implemented'), null);\n};\n\n/**\n * Fires the client-given unauthorized hook in the event a response comes back 401-Unauthorized\n * which generally means, your session is dead, jim.\n * @param {object} err - The response payload\n * @param {Query} query - The offending query\n * @return {*}\n * @protected\n */\nProvider.prototype._unauthorizedHook = function(err, query) {\n    if (typeof this.client.config.onUnauthorizedResponse === \"function\") {\n        this.client.config.onUnauthorizedResponse(err, query);\n    }\n};\n\n\n/**\n * @callback requestCallback\n * @param {object|null} error\n * @param {object|null} response\n */\n\nmodule.exports = Provider;\n},{}],28:[function(require,module,exports){\n(function (global){(function (){\n/*\n * Date: 10/20/16 4:30 PM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar util = require('util'),\n    timers = require('timers'),\n    setImmediate = global.setImmediate || /* istanbul ignore next */ timers.setImmediate,\n    Provider = require('../provider');\n\n/**\n * Request handler\n * @param {Client} [client]\n * @constructor\n */\nfunction FetchProvider(client) {\n    Provider.call(this, client);\n\n    /**\n     * Where to send requests to\n     * @type {string}\n     */\n    this.rpcHost = client.config.rpcHost || \"/rpc\";\n\n    /**\n     * What method is the RPC router expecting\n     * @type {string}\n     */\n    this.rpcMethod = client.config.rpcMethod || 'POST';\n\n    /**\n     * How many requests can be run in parallel at any given time. Additional requests will be queued.\n     * @type {*|number}\n     */\n    this.maxConcurrency = client.config.maxConcurrency || 5;\n\n    /**\n     * Active request counter\n     * @type {number}\n     * @private\n     */\n    this._activeRequests = 0;\n\n    /**\n     * Request queue\n     * @type {Array}\n     * @private\n     */\n    this._requestQueue = [];\n\n    this._handleRequest = this._handleRequest.bind(this);\n    this._completeRequest = this._completeRequest.bind(this);\n    this._runQueueIfAble = this._runQueueIfAble.bind(this);\n}\n\nutil.inherits(FetchProvider, Provider);\n\n/**\n * Returns whether the request pipeline is full (true) or not (false)\n * @returns {boolean}\n */\nFetchProvider.prototype.areRequestsSaturated = function() {\n    return this._activeRequests >= this.maxConcurrency;\n};\n\n/**\n * Queues a new request. Will run it if able\n * @param query\n * @param callback\n * @returns {Promise<any>}\n * @private\n */\nFetchProvider.prototype._queueRequest = function(query, callback) {\n    var queue = this._requestQueue;\n    var _runQueueIfAble = this._runQueueIfAble;\n\n    return new Promise(function (resolve, reject) {\n        queue.push({\n            query: query,\n            callback: callback,\n            resolve: resolve,\n            reject: reject\n        });\n        _runQueueIfAble();\n    });\n};\n\n/**\n * Runs the next available item in the queue if concurrency not met\n * @private\n */\nFetchProvider.prototype._runQueueIfAble = function() {\n    var _handleRequest = this._handleRequest;\n\n    // Run any queued requests if able\n    if (this._requestQueue.length > 0 && !this.areRequestsSaturated()) {\n\n        // Bump request counter\n        this._activeRequests++;\n\n        // Take the one off the top\n        var queuedRequest = this._requestQueue.shift();\n\n        // Execute\n        return setImmediate(function () {\n            _handleRequest(queuedRequest);\n        });\n    }\n};\n\n/**\n * Hook for when a request completes. Will try to run the next task in the queue if able\n * @private\n */\nFetchProvider.prototype._completeRequest = function() {\n\n    // Decrement request counter\n    this._activeRequests--;\n\n    // Handle the next available request\n    this._runQueueIfAble();\n};\n\n/**\n * Executes the query\n * @param {Query} query - The query to execute\n * @param callback – Callback to fire when request is completed\n * @returns {Promise<any>}\n * @abstract\n */\nFetchProvider.prototype.execute = function(query, callback) {\n    // Queue this request (returns a promise, resolved when the req completes)\n    return this._queueRequest(query, callback);\n};\n\n\n/* istanbul ignore next: taken from MDN, like it's the gospel */\n/**\n * Object.assign polyfill from MDN\n * @param target\n * @param varArgs\n * @return {any}\n */\nfunction assign(target/*, varArgs*/) { // .length of function is 2\n    'use strict';\n    if (target === null || target === undefined) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n            for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\n\n/**\n * Handles the request like execute() used to do\n * @param queuedRequest\n * @return {Promise<any>}\n * @private\n */\nFetchProvider.prototype._handleRequest = function(queuedRequest) {\n\n    // shallow copy the query so we can safely mutate it\n    var payload = assign({}, queuedRequest.query);\n    var options = payload.options;\n    delete payload.options;\n\n    var headers = assign({}, queuedRequest.query.headers);\n    headers['Accept'] = 'application/json';\n    headers['Content-Type'] = 'application/json; charset=utf-8';\n\n    var req = {\n        method: this.rpcMethod,\n        body: JSON.stringify(queuedRequest.query),\n        credentials: 'same-origin', // preserve authentication\n        headers: headers\n    };\n\n    // Hook for making fetch abortable, see: https://developers.google.com/web/updates/2017/09/abortable-fetch\n    if (options.signal) req.signal = options.signal;\n\n    var _completeRequest = this._completeRequest;\n\n    return fetch(this.rpcHost + '?a=' + encodeURIComponent(queuedRequest.query.action), req)\n        .then(function(res) {\n            return res.json();\n        })\n        .then(function(res) {\n            if (res.error) {\n                // Error response from API\n                return Promise.reject(res);\n            } else {\n                // Browserify should polyfill setImmediate\n                if (queuedRequest.callback) {\n                    return setImmediate(function() {\n                        _completeRequest();\n                        queuedRequest.callback(null, res);\n                    });\n                }\n                _completeRequest();\n                queuedRequest.resolve(res); // this goes back to caller\n                return Promise.resolve(res); // internally resolve\n            }\n        })\n        .catch(function(err) {\n            if (!err || !err.statusCode) {\n                err = {\n                    statusCode: 503,\n                    error: (err instanceof Error ? err.message : /* istanbul ignore next: not worth testing err vs stats */ err),\n                    message: \"Something went wrong\",\n                    attributes: {\n                        source: 'okanjo.providers.FetchProvider',\n                        wrappedError: err\n                    }\n                };\n            }\n\n            // Check for unauthorized hook case\n            if (err.statusCode === 401) this._unauthorizedHook(err, queuedRequest.query);\n\n            if (queuedRequest.callback) {\n                return setImmediate(function() {\n                    _completeRequest();\n                    queuedRequest.callback(err, null);\n                });\n            }\n\n            _completeRequest();\n            queuedRequest.reject(err); // this goes back to caller\n            return Promise.resolve(err); // internally resolve\n        }.bind(this))\n    ;\n};\n\n\n/**\n * @callback requestCallback\n * @param {object|null} error\n * @param {object|null} response\n */\n\nmodule.exports = FetchProvider;\n}).call(this)}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../provider\":27,\"timers\":22,\"util\":25}],29:[function(require,module,exports){\n/*\n * Date: 1/26/16 11:59 AM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar sdkUtil = require('./util'),\n    querystring = require('querystring');\n\n/**\n * Query container\n * @param {object} [base] - Base query to clone\n * @param {object} [options] - Options to override\n * @constructor\n */\nfunction Query(base, options) {\n\n    /**\n     * The API in which the resource belongs to\n     * @type {null}\n     */\n    this.api = null;\n\n    /**\n     * Resource method action / route id\n     * @type {string}\n     */\n    this.action = null;\n\n    /**\n     * Request method\n     * @example `GET` or `PUT` or `POST` or `DELETE`\n     * @type {string}\n     */\n    this.method = null;\n\n    /**\n     * Request path\n     * @type {string}\n     */\n    this.path = '';\n\n    /**\n     * Request path parameters\n     * @type {object}\n     */\n    this.pathParams = {};\n\n    /**\n     * Request query arguments\n     * @type {object|null}\n     */\n    this.query = null;\n\n    /**\n     * Request payload\n     * @type {object|null}\n     */\n    this.payload = null;\n\n    /**\n     * API key\n     * @type {null}\n     */\n    this.key = null;\n\n    /**\n     * Authorization token\n     * @type {null}\n     */\n    this.sessionToken = null;\n\n    /**\n     * Cookies\n     * @type {{}}\n     */\n    this.cookies = {};\n\n    /**\n     * Custom headers\n     * @type {{}}\n     */\n    this.headers = {};\n\n    /**\n     * SDK options, do not transmit\n     * @type {{}}\n     */\n    this.options = {};\n\n    this._extend(base);\n    this._extend(options, true);\n}\n\n\n\n/**\n * Copies and clones properties from the given object\n * @param extra\n * @param overrideAll\n * @private\n */\nQuery.prototype._extend = function(extra, overrideAll) {\n    if (extra) {\n        if (extra.api !== undefined) this.setAPI(extra.api);\n        if (extra.action !== undefined) this.setAction(extra.action);\n        if (extra.method !== undefined) this.setMethod(extra.method);\n        if (extra.path !== undefined) this.setPath(extra.path);\n        if (extra.pathParams !== undefined) this.setPathParams(extra.pathParams);\n        if (extra.query !== undefined) this.where(extra.query);\n        if (extra.payload !== undefined) this.data(extra.payload);\n        if (extra.cookies !== undefined) this.setCookies(extra.cookies);\n        if (extra.headers !== undefined) this.setHeaders(extra.headers);\n        if (extra.options !== undefined) this.setOptions(extra.options);\n\n        if (overrideAll) {\n            if (extra.key !== undefined) this.setKey(extra.key);\n            if (extra.sessionToken !== undefined) this.setSessionToken(extra.sessionToken);\n        }\n    }\n};\n\n\n/**\n * Returns the real URL path of the request\n * @return {string|Error}\n */\nQuery.prototype.getRealPath = function() {\n    return sdkUtil.buildPath(this.path, this.pathParams);\n};\n\n\n/**\n * Returns the full URL path including the querystring\n * @return {string|Error}\n */\nQuery.prototype.getFullPath = function() {\n    var path = this.getRealPath();\n    if (path && this.query) {\n        return path + '?' + querystring.stringify(this.query);\n    } else {\n        return path;\n    }\n};\n\n/**\n * Sets the name of the API which handles the query\n * @param {string} api\n * @return {Query}\n */\nQuery.prototype.setAPI = function(api) { this.api = api; return this; };\n\n/**\n * Sets the method action / route id\n * @param {string} action\n * @return {Query}\n */\nQuery.prototype.setAction = function(action) { this.action = action; return this; };\n\n/**\n * Sets the HTTP method on the request\n * @param {string} method\n * @return {Query}\n */\nQuery.prototype.setMethod = function(method) { this.method = method; return this; };\n\n\n/**\n * Sets the URL path template on the request\n * @param {string} path\n * @return {Query}\n */\nQuery.prototype.setPath = function(path) { this.path = path; return this; };\n\n/**\n * Sets the URL path parameters on the request\n * @param {object} params\n * @return {Query}\n */\nQuery.prototype.setPathParams = function(params) { this.pathParams = sdkUtil.copy(this.pathParams, params); return this; };\n\n/**\n * Sets the query parameters on the request\n * @param {object} params\n * @return {Query}\n */\nQuery.prototype.where = function(params) { this.query = sdkUtil.copy(this.query, params); return this; };\n\n/**\n * Sets the payload on the request\n * @param {object} doc\n * @return {Query}\n */\nQuery.prototype.data = function(doc) { this.payload = sdkUtil.copy(this.payload, doc); return this; };\n\n/**\n * Sets the pagination skip count on the request\n * @param {number} count\n * @return {Query}\n */\nQuery.prototype.skip = function(count) { this.query = sdkUtil.copy(this.query, { skip: count }); return this; };\n\n/**\n * Sets the pagination return count on the request\n * @param {number} count\n * @return {Query}\n */\nQuery.prototype.take = function(count) { this.query = sdkUtil.copy(this.query, { take: count }); return this; };\n\n/**\n * Sets the API key to use on the request\n * @param {string} key\n * @return {Query}\n */\nQuery.prototype.setKey = function(key) { this.key = key; return this; };\n\n\n/**\n * Sets the authorization context of the request\n * @param {string} sessionToken\n * @return {Query}\n */\nQuery.prototype.setSessionToken = function(sessionToken) { this.sessionToken = sessionToken; return this; };\n\n/**\n * Sets cookies on the request\n * @param {*} cookies\n * @returns {Query}\n */\nQuery.prototype.setCookies = function(cookies) { this.cookies = cookies; return this; };\n\n/**\n * Sets additional headers on the request\n * @param {*} headers\n * @returns {Query}\n */\nQuery.prototype.setHeaders = function(headers) { this.headers = headers; return this; };\n\n/**\n * Sets sdk options for the request\n * @param {*} options\n * @returns {Query}\n */\nQuery.prototype.setOptions = function(options) { this.options = options; return this; };\n\nmodule.exports = Query;\n},{\"./util\":30,\"querystring\":21}],30:[function(require,module,exports){\n/*\n * Date: 1/26/16 12:01 PM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Simple, deep, key-value copier\n * @param {*} destination – Target object or empty to make brand new copy\n * @param {*} source – Object to make a duplicate of\n * @return {*} – The resulting object, which might be the same as dest unless source was a value not a reference\n * @author Kevin Fitzgerald\n */\nfunction copy(destination, source) {\n    if (source !== null && typeof source === \"object\") {\n        if (Array.isArray(source)) {\n            destination = destination || [];\n            source.forEach(function(val, index) {\n                destination[index] = copy(destination[index], val);\n            });\n        } else {\n            destination = destination || {};\n            Object.keys(source).forEach(function(key) {\n                destination[key] = copy(destination[key], source[key]);\n            });\n        }\n    } else {\n        destination = source;\n    }\n\n    return destination;\n}\n\n\n/**\n * Builds the final URL path given replaceable param names\n * @param {string} path - Route path\n * @param {object} params - Parameter key value pairs\n * @return {string|Error} Final path or Error if missing a parameter\n */\nfunction buildPath(path, params) {\n\n    var extractParams = /{([a-zA-Z_]+)}/g,\n        resultPath = path,\n        p, token, name;\n\n    // Pull out the expected parameters\n    while ((p = extractParams.exec(path)) !== null) {\n\n        token = p[0];\n        name = p[1];\n\n        // Make sure the param was given\n        if (params[name]) {\n            resultPath = resultPath.replace(token, encodeURIComponent(params[name]));\n        } else {\n            return new Error('Path parameter ' + token + ' required to call ' + path);\n        }\n    }\n\n    return resultPath;\n}\n\n\n/**\n *\n * @type {{copy: copy}}\n */\nmodule.exports = {\n    copy: copy,\n    buildPath: buildPath\n};\n},{}],\"okanjo-sdk\":[function(require,module,exports){\n(function (process){(function (){\n/*\n * Date: 1/26/16 11:59 AM\n *\n * ----\n *\n * (c) Okanjo Partners Inc\n * https://okanjo.com\n * support@okanjo.com\n *\n * https://github.com/okanjo/okanjo-nodejs\n *\n * ----\n *\n * TL;DR? see: http://www.tldrlegal.com/license/mit-license\n *\n * The MIT License (MIT)\n * Copyright (c) 2013 Okanjo Partners Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar Provider = require('../src/provider'),\n    Query = require('../src/query');\n\n/**\n * SDK Base\n * @param {object} [config] Client options\n * @namespace\n * @constructor\n */\nfunction Client(config) {\n\n    // Allow client to be initialized as:  var api = new Client(\"api_key\");\n    if (typeof config === \"string\") {\n        config = {\n            key: config\n        };\n    } else {\n        config = config || {};\n    }\n\n    this.config = config;\n\n    // Connect the right default provider based on runtime context\n    if (typeof config.provider === \"function\") {\n        // Context is provided in the config - use the constructor as-is\n        this.provider = new config.provider(this);\n    } else {\n        // Detect context\n        if (process.browser) {\n            // Running in browser - default to proxy mode\n            //this.provider = new (require('../src/providers/jquery_provider'))(this);\n            this.provider = new (require('../src/providers/fetch_provider'))(this);\n        } else {\n            // Running in Node - Use the HTTP provider by default to make real requests\n            this.provider = new (require('../src/providers/http_provider'))(this);\n        }\n    }\n\n    // Attach resources\n    for (var i = 0; i < Client.resourceBinders.length; i++) {\n        Client.resourceBinders[i](this);\n    }\n}\n\n/**\n * SDK Version\n */\nClient.Version = '5.0.0';\n\n/**\n * Expose the Provider base class\n * @type {Provider}\n */\nClient.Provider = Provider;\n\n/**\n * Expose the Query base class\n * @type {Query}\n */\nClient.Query = Query;\n\n\n/**\n * Routes a request through the client's registered transport provider\n * @param {object} spec - Query specifications\n * @param {function} callback\n * @return {Query} - A compiled query, ready to rock and roll, or be modified and executed yourself\n */\nClient.prototype._makeRequest = function(spec, callback) {\n\n    // Build the query\n    var query = new Query(this.config, spec);\n\n    // Compile the query\n    this.provider.compile(query);\n\n    // If we have a callback, execute the request\n    if (callback) {\n        query.execute(callback);\n    }\n\n    // Return the query for reuse or manual execution\n    return query;\n};\n\n/**\n * Container for resource binder functions\n * @type {Array}\n */\nClient.resourceBinders = [];\n\n\nmodule.exports = Client;\n/* istanbul ignore next: generated code */\nClient.resourceBinders.push(function(Client) {\n    \n    \n    /**\n     * Accounts\n     * @namespace Client.accounts\n     */\n    Client.accounts = {\n        \n        /**\n         * Registers a new Okanjo account\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.create',\n                method: 'POST',\n                path: '/accounts',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an account\n         * @param {string} account_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        retrieve: function(account_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.retrieve',\n                method: 'GET',\n                path: '/accounts/{account_id}',\n                pathParams: {\n                    account_id: account_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns manageable accounts, or accounts on a given resource.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.list',\n                method: 'GET',\n                path: '/accounts',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates an account\n         * @param {string} account_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        update: function(account_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.update',\n                method: 'PUT',\n                path: '/accounts/{account_id}',\n                pathParams: {\n                    account_id: account_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Sets the oauth binding on behalf of an account by platform administrators\n         * @param {string} account_id – Object identifier.\n         * @param {string} provider – OAuth provider\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        bind_oauth: function(account_id, provider, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.bind_oauth',\n                method: 'PUT',\n                path: '/accounts/{account_id}/oauth/{provider}',\n                pathParams: {\n                    account_id: account_id,\n                    provider: provider\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deregister an account with an OAuth provider\n         * @param {string} account_id – Object identifier.\n         * @param {string} provider – OAuth provider\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        deregister_oauth: function(account_id, provider, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.deregister_oauth',\n                method: 'DELETE',\n                path: '/accounts/{account_id}/oauth/{provider}',\n                pathParams: {\n                    account_id: account_id,\n                    provider: provider\n                }\n            }, callback);\n        },\n        \n        /**\n         * Requests a password reset for an account with the given email address\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        recover: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.recover',\n                method: 'POST',\n                path: '/accounts/recover',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Register an account with an OAuth provider\n         * @param {string} account_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        register_oauth: function(account_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.register_oauth',\n                method: 'POST',\n                path: '/accounts/{account_id}/oauth',\n                pathParams: {\n                    account_id: account_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an account's access control list. This provides an overview of what the account has access to.\n         * @param {string} account_id – Account id for the acl to be retrieved.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.accounts#\n         */\n        retrieve_acl: function(account_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'account.retrieve_acl',\n                method: 'GET',\n                path: '/accounts/{account_id}/acl',\n                pathParams: {\n                    account_id: account_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Ads\n     * @namespace Client.ads\n     */\n    Client.ads = {\n        \n        /**\n         * Returns content to fill a placement.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.ads#\n         */\n        fill: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'ads.fill',\n                method: 'POST',\n                path: '/content',\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Articles\n     * @namespace Client.articles\n     */\n    Client.articles = {\n        \n        /**\n         * Creates an article for distribution\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'article.create',\n                method: 'POST',\n                path: '/articles',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an article\n         * @param {alternatives} url_or_id – URL or ID of the article\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        retrieve: function(url_or_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'article.retrieve',\n                method: 'GET',\n                path: '/articles/{url_or_id}',\n                pathParams: {\n                    url_or_id: url_or_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists articles that meet the given criteria.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'article.list',\n                method: 'GET',\n                path: '/articles',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Modifies an article\n         * @param {alternatives} url_or_id – URL or ID of the article\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        update: function(url_or_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'article.update',\n                method: 'PUT',\n                path: '/articles/{url_or_id}',\n                pathParams: {\n                    url_or_id: url_or_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Follows the article URL.\n         * @param {string} article_id – ID of the article\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        follow: function(article_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'article.follow',\n                method: 'GET',\n                path: '/articles/{article_id}/follow',\n                pathParams: {\n                    article_id: article_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an article's content\n         * @param {alternatives} url_or_id – URL or ID of the article\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.articles#\n         */\n        retrieve_content: function(url_or_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'article.retrieve_content',\n                method: 'GET',\n                path: '/articles/{url_or_id}/content',\n                pathParams: {\n                    url_or_id: url_or_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Domains\n     * @namespace Client.domains\n     */\n    Client.domains = {\n        \n        /**\n         * Associates a domain with the property.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'domain.create',\n                method: 'POST',\n                path: '/domains',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a domain with the given name.\n         * @param {string} domain_name – Fully qualified domain name\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        retrieve: function(domain_name, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'domain.retrieve',\n                method: 'GET',\n                path: '/domains/{domain_name}',\n                pathParams: {\n                    domain_name: domain_name\n                }\n            }, callback);\n        },\n        \n        /**\n         * List domains with the given criteria.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'domain.list',\n                method: 'GET',\n                path: '/domains',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a domain with the given name.\n         * @param {string} domain_name – Fully qualified domain name\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        update: function(domain_name, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'domain.update',\n                method: 'PUT',\n                path: '/domains/{domain_name}',\n                pathParams: {\n                    domain_name: domain_name\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Dissociates a domain from its associated property.\n         * @param {string} domain_name – Fully qualified domain name\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domains#\n         */\n        delete: function(domain_name, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'domain.delete',\n                method: 'DELETE',\n                path: '/domains/{domain_name}',\n                pathParams: {\n                    domain_name: domain_name\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Organizations\n     * @namespace Client.organizations\n     */\n    Client.organizations = {\n        \n        /**\n         * Creates a new organization under the current user.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'organization.create',\n                method: 'POST',\n                path: '/organizations',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Gets a particular organization if visible to the current user.\n         * @param {string} org_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        retrieve: function(org_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'organization.retrieve',\n                method: 'GET',\n                path: '/organizations/{org_id}',\n                pathParams: {\n                    org_id: org_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists organizations visible to the current user.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'organization.list',\n                method: 'GET',\n                path: '/organizations',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates an organization\n         * @param {string} org_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.organizations#\n         */\n        update: function(org_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'organization.update',\n                method: 'PUT',\n                path: '/organizations/{org_id}',\n                pathParams: {\n                    org_id: org_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Placements\n     * @namespace Client.placements\n     */\n    Client.placements = {\n        \n        /**\n         * Creates a ProductMatch placement\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.create',\n                method: 'POST',\n                path: '/placements',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a ProductMatch placement\n         * @param {string} placement_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        retrieve: function(placement_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.retrieve',\n                method: 'GET',\n                path: '/placements/{placement_id}',\n                pathParams: {\n                    placement_id: placement_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * List ProductMatch placements\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.list',\n                method: 'GET',\n                path: '/placements',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a ProductMatch placement\n         * @param {string} placement_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        update: function(placement_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.update',\n                method: 'PUT',\n                path: '/placements/{placement_id}',\n                pathParams: {\n                    placement_id: placement_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a ProductMatch placement\n         * @param {string} placement_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        delete: function(placement_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.delete',\n                method: 'DELETE',\n                path: '/placements/{placement_id}',\n                pathParams: {\n                    placement_id: placement_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Creates a placement test, used for A-B testing.\n         * @param {string} placement_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        create_test: function(placement_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.create_test',\n                method: 'POST',\n                path: '/placements/{placement_id}/tests',\n                pathParams: {\n                    placement_id: placement_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a placement test.\n         * @param {string} placement_id – Object identifier.\n         * @param {string} placement_test_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        delete_test: function(placement_id, placement_test_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.delete_test',\n                method: 'DELETE',\n                path: '/placements/{placement_id}/tests/{placement_test_id}',\n                pathParams: {\n                    placement_id: placement_id,\n                    placement_test_id: placement_test_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Updates a placement test.\n         * @param {string} placement_id – Object identifier.\n         * @param {string} placement_test_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.placements#\n         */\n        update_test: function(placement_id, placement_test_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'placement.update_test',\n                method: 'PUT',\n                path: '/placements/{placement_id}/tests/{placement_test_id}',\n                pathParams: {\n                    placement_id: placement_id,\n                    placement_test_id: placement_test_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Platforms\n     * @namespace Client.platforms\n     */\n    Client.platforms = {\n        \n        /**\n         * Retrieves a platform\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.platforms#\n         */\n        retrieve: function(callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'platform.retrieve',\n                method: 'GET',\n                path: '/platform',\n            }, callback);\n        },\n        \n        /**\n         * Modifies a platform\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.platforms#\n         */\n        update: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'platform.update',\n                method: 'PUT',\n                path: '/platform',\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Products\n     * @namespace Client.products\n     */\n    Client.products = {\n        \n        /**\n         * Creates a product\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'product.create',\n                method: 'POST',\n                path: '/products',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a product\n         * @param {string} product_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        retrieve: function(product_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'product.retrieve',\n                method: 'GET',\n                path: '/products/{product_id}',\n                pathParams: {\n                    product_id: product_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists products\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'product.list',\n                method: 'GET',\n                path: '/products',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a product\n         * @param {string} product_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        update: function(product_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'product.update',\n                method: 'PUT',\n                path: '/products/{product_id}',\n                pathParams: {\n                    product_id: product_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a product\n         * @param {string} product_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        delete: function(product_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'product.delete',\n                method: 'DELETE',\n                path: '/products/{product_id}',\n                pathParams: {\n                    product_id: product_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Follows the purchase URL.\n         * @param {string} product_id – Object identifier.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.products#\n         */\n        follow: function(product_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'product.follow',\n                method: 'GET',\n                path: '/products/{product_id}/follow',\n                pathParams: {\n                    product_id: product_id\n                },\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Properties\n     * @namespace Client.properties\n     */\n    Client.properties = {\n        \n        /**\n         * Creates a new property.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'property.create',\n                method: 'POST',\n                path: '/properties',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a property.\n         * @param {string} property_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        retrieve: function(property_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'property.retrieve',\n                method: 'GET',\n                path: '/properties/{property_id}',\n                pathParams: {\n                    property_id: property_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns accessible properties.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'property.list',\n                method: 'GET',\n                path: '/properties',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a property.\n         * @param {string} property_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.properties#\n         */\n        update: function(property_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'property.update',\n                method: 'PUT',\n                path: '/properties/{property_id}',\n                pathParams: {\n                    property_id: property_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Reporting\n     * @namespace Client.reporting\n     */\n    Client.reporting = {\n        \n        /**\n         * Returns a histogram of clicks in timescale\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        click_date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.click_date_histogram',\n                method: 'GET',\n                path: '/reporting/clicks/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        click_top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.click_top_n',\n                method: 'GET',\n                path: '/reporting/clicks/top-n',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns a histogram of page metrics in timescale\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        page_date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.page_date_histogram',\n                method: 'GET',\n                path: '/reporting/pages/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the complete placement performance report for the given time range\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        page_report: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.page_report',\n                method: 'GET',\n                path: '/reporting/pages/report',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        page_top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.page_top_n',\n                method: 'GET',\n                path: '/reporting/pages/top-n',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns a histogram of resource metrics in timescale\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        resource_date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.resource_date_histogram',\n                method: 'GET',\n                path: '/reporting/resources/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the complete resource performance report for the given time range\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        resource_report: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.resource_report',\n                method: 'GET',\n                path: '/reporting/resources/report',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        resource_top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.resource_top_n',\n                method: 'GET',\n                path: '/reporting/resources/top-n',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns a histogram of widget metrics in timescale\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        widget_date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.widget_date_histogram',\n                method: 'GET',\n                path: '/reporting/widgets/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the complete placement performance report for the given time range\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        widget_report: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.widget_report',\n                method: 'GET',\n                path: '/reporting/widgets/report',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        widget_top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'reporting.widget_top_n',\n                method: 'GET',\n                path: '/reporting/widgets/top-n',\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Resource Sets\n     * @namespace Client.resource_sets\n     */\n    Client.resource_sets = {\n        \n        /**\n         * Creates a new resource set.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'resource_set.create',\n                method: 'POST',\n                path: '/resource-sets',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a resource set with the given name.\n         * @param {string} resource_set_name – Name of the resource set.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        retrieve: function(resource_set_name, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'resource_set.retrieve',\n                method: 'GET',\n                path: '/resource-sets/{resource_set_name}',\n                pathParams: {\n                    resource_set_name: resource_set_name\n                }\n            }, callback);\n        },\n        \n        /**\n         * List resource sets with the given criteria.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'resource_set.list',\n                method: 'GET',\n                path: '/resource-sets',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a resource set with the given name.\n         * @param {string} resource_set_name – Name of the resource set.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        update: function(resource_set_name, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'resource_set.update',\n                method: 'PUT',\n                path: '/resource-sets/{resource_set_name}',\n                pathParams: {\n                    resource_set_name: resource_set_name\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Removes a resource set.\n         * @param {string} resource_set_name – Name of the resource set.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.resource_sets#\n         */\n        delete: function(resource_set_name, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'resource_set.delete',\n                method: 'DELETE',\n                path: '/resource-sets/{resource_set_name}',\n                pathParams: {\n                    resource_set_name: resource_set_name\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Roles\n     * @namespace Client.roles\n     */\n    Client.roles = {\n        \n        /**\n         * Creates a role for the given resource\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.create',\n                method: 'POST',\n                path: '/roles',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a role.\n         * @param {string} role_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        retrieve: function(role_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.retrieve',\n                method: 'GET',\n                path: '/roles/{role_id}',\n                pathParams: {\n                    role_id: role_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Retrieves roles on a given resource.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.list',\n                method: 'GET',\n                path: '/roles',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a role\n         * @param {string} role_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        update: function(role_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.update',\n                method: 'PUT',\n                path: '/roles/{role_id}',\n                pathParams: {\n                    role_id: role_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a role\n         * @param {string} role_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        delete: function(role_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.delete',\n                method: 'DELETE',\n                path: '/roles/{role_id}',\n                pathParams: {\n                    role_id: role_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Adds an account to a role.\n         * @param {string} role_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        add_account: function(role_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.add_account',\n                method: 'POST',\n                path: '/roles/{role_id}/members',\n                pathParams: {\n                    role_id: role_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * List accounts that belong to a role.\n         * @param {string} role_id – Object identifier.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        list_accounts: function(role_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.list_accounts',\n                method: 'GET',\n                path: '/roles/{role_id}/members',\n                pathParams: {\n                    role_id: role_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Removes an account from a role.\n         * @param {string} role_id – Object identifier.\n         * @param {string} account_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.roles#\n         */\n        remove_account: function(role_id, account_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'role.remove_account',\n                method: 'DELETE',\n                path: '/roles/{role_id}/members/{account_id}',\n                pathParams: {\n                    role_id: role_id,\n                    account_id: account_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Account Sessions\n     * @namespace Client.sessions\n     */\n    Client.sessions = {\n        \n        /**\n         * Starts a new account session\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.create',\n                method: 'POST',\n                path: '/accounts/sessions',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Gets an particular session.\n         * @param {string} account_id – Object identifier.\n         * @param {string} session_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        retrieve: function(account_id, session_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.retrieve',\n                method: 'GET',\n                path: '/accounts/{account_id}/sessions/{session_id}',\n                pathParams: {\n                    account_id: account_id,\n                    session_id: session_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns past and present sessions belonging to the account.\n         * @param {string} account_id – Object identifier.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        list: function(account_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.list',\n                method: 'GET',\n                path: '/accounts/{account_id}/sessions',\n                pathParams: {\n                    account_id: account_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a session belonging to the account.\n         * @param {string} account_id – Object identifier.\n         * @param {string} session_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        update: function(account_id, session_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.update',\n                method: 'PUT',\n                path: '/accounts/{account_id}/sessions/{session_id}',\n                pathParams: {\n                    account_id: account_id,\n                    session_id: session_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Closes the session, invalidating the `session_token`. The status of the session will become `ended`.\n         * @param {string} account_id – Object identifier.\n         * @param {string} session_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        delete: function(account_id, session_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.delete',\n                method: 'DELETE',\n                path: '/accounts/{account_id}/sessions/{session_id}',\n                pathParams: {\n                    account_id: account_id,\n                    session_id: session_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns the OAuth authorization URL for the client\n         * @param {string} provider – OAuth provider\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        oauth_authorize: function(provider, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.oauth_authorize',\n                method: 'GET',\n                path: '/accounts/sessions/oauth/{provider}',\n                pathParams: {\n                    provider: provider\n                }\n            }, callback);\n        },\n        \n        /**\n         * Retrieves the current session context\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sessions#\n         */\n        retrieve_current: function(callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'session.retrieve_current',\n                method: 'GET',\n                path: '/accounts/sessions/current',\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Stores\n     * @namespace Client.stores\n     */\n    Client.stores = {\n        \n        /**\n         * Creates a new store.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'store.create',\n                method: 'POST',\n                path: '/stores',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a store.\n         * @param {string} store_id – Object identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        retrieve: function(store_id, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'store.retrieve',\n                method: 'GET',\n                path: '/stores/{store_id}',\n                pathParams: {\n                    store_id: store_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Retrieves accessible stores.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'api',\n                action: 'store.list',\n                method: 'GET',\n                path: '/stores',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a store.\n         * @param {string} store_id – Object identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.stores#\n         */\n        update: function(store_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'api',\n                action: 'store.update',\n                method: 'PUT',\n                path: '/stores/{store_id}',\n                pathParams: {\n                    store_id: store_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n\n});\n/* istanbul ignore next: generated code */\nClient.resourceBinders.push(function(Client) {\n    \n    Client.farm = {};\n    \n    \n    /**\n     * Activity\n     * @namespace Client.farm.activities\n     */\n    Client.farm.activities = {\n        \n        /**\n         * Lists the most recent events generated by curators.\n         * @param {string} instance_id – Instance Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.activities#\n         */\n        list: function(instance_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'activity.list',\n                method: 'GET',\n                path: '/api/{instance_id}/activity',\n                pathParams: {\n                    instance_id: instance_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Advertisers\n     * @namespace Client.farm.advertisers\n     */\n    Client.farm.advertisers = {\n        \n        /**\n         * Create a new advertiser.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertisers#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser.create',\n                method: 'POST',\n                path: '/api/advertisers',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Returns a given advertiser.\n         * @param {string} advertiser_id – Advertiser Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertisers#\n         */\n        retrieve: function(advertiser_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser.retrieve',\n                method: 'GET',\n                path: '/api/advertisers/{advertiser_id}',\n                pathParams: {\n                    advertiser_id: advertiser_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of advertisers\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertisers#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser.list',\n                method: 'GET',\n                path: '/api/advertisers',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a given advertiser.\n         * @param {string} advertiser_id – Advertiser Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertisers#\n         */\n        update: function(advertiser_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser.update',\n                method: 'PUT',\n                path: '/api/advertisers/{advertiser_id}',\n                pathParams: {\n                    advertiser_id: advertiser_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Generates a new unique webhook url for the provider\n         * @param {string} advertiser_id – Advertiser Id\n         * @param {string} webhook_type – Webhook provider type\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertisers#\n         */\n        regenerate_webhook: function(advertiser_id, webhook_type, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser.regenerate_webhook',\n                method: 'POST',\n                path: '/api/advertisers/{advertiser_id}/webhooks/{webhook_type}/regenerate',\n                pathParams: {\n                    advertiser_id: advertiser_id,\n                    webhook_type: webhook_type\n                },\n                payload: {}\n            }, callback);\n        },\n        \n        /**\n         * Returns the webhook URLs for the advertiser\n         * @param {string} advertiser_id – Advertiser Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertisers#\n         */\n        retrieve_webhooks: function(advertiser_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser.retrieve_webhooks',\n                method: 'GET',\n                path: '/api/advertisers/{advertiser_id}/webhooks',\n                pathParams: {\n                    advertiser_id: advertiser_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Advertiser Events\n     * @namespace Client.farm.advertiser_events\n     */\n    Client.farm.advertiser_events = {\n        \n        /**\n         * Advertiser acknowledgement of publisher click-through\n         * @param {string} advertiser_id – Advertiser Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.advertiser_events#\n         */\n        acknowledge: function(advertiser_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'advertiser_event.acknowledge',\n                method: 'POST',\n                path: '/api/advertisers/{advertiser_id}/events/acknowledge',\n                pathParams: {\n                    advertiser_id: advertiser_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Amazon Links\n     * @namespace Client.farm.amazon_links\n     */\n    Client.farm.amazon_links = {\n        \n        /**\n         * Creates a new Amazon link.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        create: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.create',\n                method: 'POST',\n                path: '/api/{instance_id}/links/amazon',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an existing Amazon link.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id_asin – Unique amazon product id, using combined vendor_id:asin pair\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        retrieve: function(instance_id, vendor_id_asin, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/links/amazon/{vendor_id_asin}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id_asin: vendor_id_asin\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns Amazon links that meet the filter criteria.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.list',\n                method: 'GET',\n                path: '/api/{instance_id}/links/amazon',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Update an existing Amazon link.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id_asin – Unique amazon product id, using combined vendor_id:asin pair\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        update: function(instance_id, vendor_id_asin, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.update',\n                method: 'PUT',\n                path: '/api/{instance_id}/links/amazon/{vendor_id_asin}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id_asin: vendor_id_asin\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes an Amazon link.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id_asin – Unique amazon product id, using combined vendor_id:asin pair\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        delete: function(instance_id, vendor_id_asin, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.delete',\n                method: 'DELETE',\n                path: '/api/{instance_id}/links/amazon/{vendor_id_asin}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id_asin: vendor_id_asin\n                }\n            }, callback);\n        },\n        \n        /**\n         * Follows the Amazon link to the offer page, or finds a replacement if no longer available.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id_asin – Unique amazon product id, using combined vendor_id:asin pair\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        follow: function(instance_id, vendor_id_asin, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.follow',\n                method: 'GET',\n                path: '/api/{instance_id}/links/amazon/{vendor_id_asin}/follow',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id_asin: vendor_id_asin\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns Amazon offers that meet the filter criteria.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        search: function(instance_id, vendor_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.search',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors/{vendor_id}/amazon-search',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Tracks an image impression for the given Amazon link\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id_asin – Unique amazon product id, using combined vendor_id:asin pair\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.amazon_links#\n         */\n        track_impression: function(instance_id, vendor_id_asin, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'amazon_link.track_impression',\n                method: 'GET',\n                path: '/images/{instance_id}/links/amazon/{vendor_id_asin}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id_asin: vendor_id_asin\n                },\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Buckets\n     * @namespace Client.farm.buckets\n     */\n    Client.farm.buckets = {\n        \n        /**\n         * Create a new bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        create: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.create',\n                method: 'POST',\n                path: '/api/{instance_id}/buckets',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Returns a specific bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        retrieve: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/buckets/{bucket_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of buckets.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.list',\n                method: 'GET',\n                path: '/api/{instance_id}/buckets',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Make changes to a bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        update: function(instance_id, bucket_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.update',\n                method: 'PUT',\n                path: '/api/{instance_id}/buckets/{bucket_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Removes a bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        delete: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.delete',\n                method: 'DELETE',\n                path: '/api/{instance_id}/buckets/{bucket_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Fills a bucket to capacity with recommended offers.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        backfill: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.backfill',\n                method: 'POST',\n                path: '/api/{instance_id}/buckets/{bucket_id}/do-backfill',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                },\n                payload: {}\n            }, callback);\n        },\n        \n        /**\n         * Gets the current state of the offers within the bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        status: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.status',\n                method: 'GET',\n                path: '/api/{instance_id}/buckets/{bucket_id}/status',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Toggles AI recommendations ON if currently disabled, or OFF if currently enabled.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        toggle_ai: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.toggle_ai',\n                method: 'POST',\n                path: '/api/{instance_id}/buckets/{bucket_id}/toggle-ai',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                },\n                payload: {}\n            }, callback);\n        },\n        \n        /**\n         * Toggles AI automation ON if currently disabled, or OFF if currently enabled.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        toggle_ai_automation: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.toggle_ai_automation',\n                method: 'POST',\n                path: '/api/{instance_id}/buckets/{bucket_id}/toggle-ai-automation',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                },\n                payload: {}\n            }, callback);\n        },\n        \n        /**\n         * Remove all offers from a bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {string} bucket_id – Bucket Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.buckets#\n         */\n        truncate: function(instance_id, bucket_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket.truncate',\n                method: 'POST',\n                path: '/api/{instance_id}/buckets/{bucket_id}/truncate',\n                pathParams: {\n                    instance_id: instance_id,\n                    bucket_id: bucket_id\n                },\n                payload: {}\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Bucket Items\n     * @namespace Client.farm.bucket_items\n     */\n    Client.farm.bucket_items = {\n        \n        /**\n         * Adds the given list of offers to a bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.bucket_items#\n         */\n        create: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket_item.create',\n                method: 'POST',\n                path: '/api/{instance_id}/bucket-items',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Removes a list of offers from a bucket.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.bucket_items#\n         */\n        delete: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'bucket_item.delete',\n                method: 'POST',\n                path: '/api/{instance_id}/bucket-items/delete',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Categories\n     * @namespace Client.farm.categories\n     */\n    Client.farm.categories = {\n        \n        /**\n         * Returns a list of merchant category mappings by vendor.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {string} merchant_id – Vendor merchant identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.categories#\n         */\n        list: function(instance_id, vendor_id, merchant_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'category.list',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors/{vendor_id}/merchants/{merchant_id}/categories',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id,\n                    merchant_id: merchant_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Adds or updates a vendor-merchant category mapping\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {string} merchant_id – Vendor merchant identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.categories#\n         */\n        upsert: function(instance_id, vendor_id, merchant_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'category.upsert',\n                method: 'POST',\n                path: '/api/{instance_id}/vendors/{vendor_id}/merchants/{merchant_id}/categories',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id,\n                    merchant_id: merchant_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Commissions\n     * @namespace Client.farm.commissions\n     */\n    Client.farm.commissions = {\n        \n        /**\n         * Returns a given advertiser.\n         * @param {string} commission_id – Commission Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.commissions#\n         */\n        retrieve: function(commission_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'commission.retrieve',\n                method: 'GET',\n                path: '/api/commissions/{commission_id}',\n                pathParams: {\n                    commission_id: commission_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of commissions.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.commissions#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'commission.list',\n                method: 'GET',\n                path: '/api/commissions',\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Correlations\n     * @namespace Client.farm.correlations\n     */\n    Client.farm.correlations = {\n        \n        /**\n         * Sets an offer's augmentation data.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.correlations#\n         */\n        update: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'correlation.update',\n                method: 'PUT',\n                path: '/api/{instance_id}/correlations',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Direct Links\n     * @namespace Client.farm.direct_links\n     */\n    Client.farm.direct_links = {\n        \n        /**\n         * Creates a new direct link.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        create: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.create',\n                method: 'POST',\n                path: '/api/{instance_id}/links',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves an existing direct link.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_offer_id – Unique offer id, using combined vendor_id:offer_id pair\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        retrieve: function(instance_id, vendor_offer_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/links/{vendor_offer_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_offer_id: vendor_offer_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns direct links that meet the filter criteria.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.list',\n                method: 'GET',\n                path: '/api/{instance_id}/links',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Update an existing direct link.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_offer_id – Unique offer id, using combined vendor_id:offer_id pair\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        update: function(instance_id, vendor_offer_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.update',\n                method: 'PUT',\n                path: '/api/{instance_id}/links/{vendor_offer_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_offer_id: vendor_offer_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a direct link.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_offer_id – Unique offer id, using combined vendor_id:offer_id pair\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        delete: function(instance_id, vendor_offer_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.delete',\n                method: 'DELETE',\n                path: '/api/{instance_id}/links/{vendor_offer_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_offer_id: vendor_offer_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Follows the direct offer link to the offer page, or finds a replacement if no longer available.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_offer_id – Unique offer id, using combined vendor_id:offer_id pair\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        follow: function(instance_id, vendor_offer_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.follow',\n                method: 'GET',\n                path: '/api/{instance_id}/links/{vendor_offer_id}/follow',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_offer_id: vendor_offer_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Tracks an image impression for the given offer\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_offer_id – Unique offer id, using combined vendor_id:offer_id pair\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.direct_links#\n         */\n        track_impression: function(instance_id, vendor_offer_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'direct_link.track_impression',\n                method: 'GET',\n                path: '/images/{instance_id}/links/{vendor_offer_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_offer_id: vendor_offer_id\n                },\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Domains\n     * @namespace Client.farm.domain_mappings\n     */\n    Client.farm.domain_mappings = {\n        \n        /**\n         * Retrieves a domain-vendor mapping\n         * @param {string} instance_id – Instance Id\n         * @param {string} fqdn – Fully qualified domain or host name\n         * @param {string} vendor_id – Vendor Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domain_mappings#\n         */\n        retrieve: function(instance_id, fqdn, vendor_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'domain_mapping.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/domain_mappings/domains/{fqdn}/vendors/{vendor_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    fqdn: fqdn,\n                    vendor_id: vendor_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of domain-vendor mappings.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domain_mappings#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'domain_mapping.list',\n                method: 'GET',\n                path: '/api/{instance_id}/domain_mappings',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns all vendor mappings aggregated by domain\n         * @param {string} instance_id – Instance Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domain_mappings#\n         */\n        summary: function(instance_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'domain_mapping.summary',\n                method: 'GET',\n                path: '/api/{instance_id}/domain_mappings/summary',\n                pathParams: {\n                    instance_id: instance_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Sets the a domain-vendor mapping\n         * @param {string} instance_id – Instance Id\n         * @param {string} fqdn – Fully qualified domain or host name\n         * @param {string} vendor_id – Vendor Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domain_mappings#\n         */\n        upsert: function(instance_id, fqdn, vendor_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'domain_mapping.upsert',\n                method: 'PUT',\n                path: '/api/{instance_id}/domain_mappings/domains/{fqdn}/vendors/{vendor_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    fqdn: fqdn,\n                    vendor_id: vendor_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Removes a domain-vendor mapping\n         * @param {string} instance_id – Instance Id\n         * @param {string} fqdn – Fully qualified domain or host name\n         * @param {string} vendor_id – Vendor Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.domain_mappings#\n         */\n        delete: function(instance_id, fqdn, vendor_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'domain_mapping.delete',\n                method: 'DELETE',\n                path: '/api/{instance_id}/domain_mappings/domains/{fqdn}/vendors/{vendor_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    fqdn: fqdn,\n                    vendor_id: vendor_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Instances\n     * @namespace Client.farm.instances\n     */\n    Client.farm.instances = {\n        \n        /**\n         * Creates a new instance of the farm.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.instances#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'instance.create',\n                method: 'POST',\n                path: '/api/instances',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Returns a given farm instance.\n         * @param {string} instance_id – Instance Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.instances#\n         */\n        retrieve: function(instance_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'instance.retrieve',\n                method: 'GET',\n                path: '/api/instances/{instance_id}',\n                pathParams: {\n                    instance_id: instance_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns accessible farm instances\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.instances#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'instance.list',\n                method: 'GET',\n                path: '/api/instances',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a farm instance.\n         * @param {string} instance_id – Instance Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.instances#\n         */\n        update: function(instance_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'instance.update',\n                method: 'PUT',\n                path: '/api/instances/{instance_id}',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Vendors\n     * @namespace Client.farm.merchants\n     */\n    Client.farm.merchants = {\n        \n        /**\n         * Returns a list of merchants belonging to the vendor.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.merchants#\n         */\n        list: function(instance_id, vendor_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'merchants.list',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors/{vendor_id}/merchants',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Offers\n     * @namespace Client.farm.offers\n     */\n    Client.farm.offers = {\n        \n        /**\n         * Returns an offer given its canonical id\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_offer_id – Unique offer id, using combined vendor_id:offer_id pair\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.offers#\n         */\n        retrieve: function(instance_id, vendor_offer_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'offer.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/offers/{vendor_offer_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_offer_id: vendor_offer_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * List and filter offers.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.offers#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'offer.list',\n                method: 'GET',\n                path: '/api/{instance_id}/offers',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Programs\n     * @namespace Client.farm.programs\n     */\n    Client.farm.programs = {\n        \n        /**\n         * Create a new advertiser program.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.programs#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program.create',\n                method: 'POST',\n                path: '/api/programs',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Returns a given advertiser program.\n         * @param {string} program_id – Program Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.programs#\n         */\n        retrieve: function(program_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program.retrieve',\n                method: 'GET',\n                path: '/api/programs/{program_id}',\n                pathParams: {\n                    program_id: program_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of advertiser programs\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.programs#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program.list',\n                method: 'GET',\n                path: '/api/programs',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a given advertiser program.\n         * @param {string} program_id – Program Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.programs#\n         */\n        update: function(program_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program.update',\n                method: 'PUT',\n                path: '/api/programs/{program_id}',\n                pathParams: {\n                    program_id: program_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Program Actions\n     * @namespace Client.farm.program_actions\n     */\n    Client.farm.program_actions = {\n        \n        /**\n         * Create a new advertiser program action.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.program_actions#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program_action.create',\n                method: 'POST',\n                path: '/api/program-actions',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Returns a given advertiser program action.\n         * @param {string} program_action_id – Action Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.program_actions#\n         */\n        retrieve: function(program_action_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program_action.retrieve',\n                method: 'GET',\n                path: '/api/program-actions/{program_action_id}',\n                pathParams: {\n                    program_action_id: program_action_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of advertiser program actions\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.program_actions#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program_action.list',\n                method: 'GET',\n                path: '/api/program-actions',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a given advertiser program action.\n         * @param {string} program_action_id – Action Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.program_actions#\n         */\n        update: function(program_action_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'program_action.update',\n                method: 'PUT',\n                path: '/api/program-actions/{program_action_id}',\n                pathParams: {\n                    program_action_id: program_action_id\n                },\n                payload: payload\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Recommended Offers\n     * @namespace Client.farm.recommended_offers\n     */\n    Client.farm.recommended_offers = {\n        \n        /**\n         * List and filter recommended offers.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.recommended_offers#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'recommended_offer.list',\n                method: 'GET',\n                path: '/api/{instance_id}/ai/offers',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Reporting\n     * @namespace Client.farm.reporting\n     */\n    Client.farm.reporting = {\n        \n        /**\n         * Returns all results by aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        commission_by_group: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.commission_by_group',\n                method: 'GET',\n                path: '/api/reporting/commissions/by-group',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns a histogram of commission metrics for time-series visualizations\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        commission_date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.commission_date_histogram',\n                method: 'GET',\n                path: '/api/reporting/commissions/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns complete transaction records for the given time range\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        commission_report: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.commission_report',\n                method: 'GET',\n                path: '/api/reporting/commissions/report',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        commission_top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.commission_top_n',\n                method: 'GET',\n                path: '/api/reporting/commissions/top-n',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns a histogram of link metrics for time-series visualizations\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        link_date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.link_date_histogram',\n                method: 'GET',\n                path: '/api/reporting/links/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        link_top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.link_top_n',\n                method: 'GET',\n                path: '/api/reporting/links/top-n',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns a histogram of vendor sync metrics for time-series visualizations\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        vendor_sync_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'reporting.vendor_sync_histogram',\n                method: 'GET',\n                path: '/api/reporting/vendor-syncs/date-histogram',\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Web Sockets\n     * @namespace Client.farm.sockets\n     */\n    Client.farm.sockets = {\n        \n        /**\n         * Creates a web socket access token\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.sockets#\n         */\n        create_token: function(callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'socket.create_token',\n                method: 'POST',\n                path: '/api/sockets',\n                payload: {}\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Vendors\n     * @namespace Client.farm.vendors\n     */\n    Client.farm.vendors = {\n        \n        /**\n         * Returns detailed information about a vendor.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.vendors#\n         */\n        retrieve: function(instance_id, vendor_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'vendor.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors/{vendor_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of vendors.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.vendors#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'vendor.list',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a vendor.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.vendors#\n         */\n        update: function(instance_id, vendor_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'vendor.update',\n                method: 'PUT',\n                path: '/api/{instance_id}/vendors/{vendor_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Resynchronizes all offers associated with the vendor.\n         * @param {string} instance_id – Instance Id\n         * @param {string} vendor_id – Vendor Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.vendors#\n         */\n        resync: function(instance_id, vendor_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'vendor.resync',\n                method: 'POST',\n                path: '/api/{instance_id}/vendors/{vendor_id}/resync',\n                pathParams: {\n                    instance_id: instance_id,\n                    vendor_id: vendor_id\n                },\n                payload: {}\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Vendors\n     * @namespace Client.farm.vendor_syncs\n     */\n    Client.farm.vendor_syncs = {\n        \n        /**\n         * Returns detailed information about a vendor sync.\n         * @param {string} instance_id – Instance Id\n         * @param {string} sync_id – Vendor Sync Id\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.vendor_syncs#\n         */\n        retrieve: function(instance_id, sync_id, callback) {\n            return Client._makeRequest({\n                api: 'farm',\n                action: 'vendor_sync.retrieve',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors/syncs/{sync_id}',\n                pathParams: {\n                    instance_id: instance_id,\n                    sync_id: sync_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Returns a list of vendor sync logs.\n         * @param {string} instance_id – Instance Id\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.vendor_syncs#\n         */\n        list: function(instance_id, query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'farm',\n                action: 'vendor_sync.list',\n                method: 'GET',\n                path: '/api/{instance_id}/vendors/syncs',\n                pathParams: {\n                    instance_id: instance_id\n                },\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n\n});\n/* istanbul ignore next: generated code */\nClient.resourceBinders.push(function(Client) {\n    \n    Client.shortcodes = {};\n    \n    \n    /**\n     * Reporting\n     * @namespace Client.shortcodes.reporting\n     */\n    Client.shortcodes.reporting = {\n        \n        /**\n         * Returns a histogram of link metrics for time-series visualizations\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        date_histogram: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'reporting.date_histogram',\n                method: 'GET',\n                path: '/api/reporting/clicks/date-histogram',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Returns the top N results per aggregation group\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.reportings#\n         */\n        top_n: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'reporting.top_n',\n                method: 'GET',\n                path: '/api/reporting/clicks/top-n',\n                query: query\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Shortcodes\n     * @namespace Client.shortcodes.shortcodes\n     */\n    Client.shortcodes.shortcodes = {\n        \n        /**\n         * Creates a new shortcode.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.shortcodes#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'shortcode.create',\n                method: 'POST',\n                path: '/api/shortcodes',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a shortcode.\n         * @param {string} shortcode – Shortcode identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.shortcodes#\n         */\n        retrieve: function(shortcode, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'shortcode.retrieve',\n                method: 'GET',\n                path: '/api/shortcodes/{shortcode}',\n                pathParams: {\n                    shortcode: shortcode\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists shortcode.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.shortcodes#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'shortcode.list',\n                method: 'GET',\n                path: '/api/shortcodes',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a shortcode.\n         * @param {string} shortcode – Shortcode identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.shortcodes#\n         */\n        update: function(shortcode, payload, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'shortcode.update',\n                method: 'PUT',\n                path: '/api/shortcodes/{shortcode}',\n                pathParams: {\n                    shortcode: shortcode\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a shortcode.\n         * @param {string} shortcode – Shortcode identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.shortcodes#\n         */\n        delete: function(shortcode, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'shortcode.delete',\n                method: 'DELETE',\n                path: '/api/shortcodes/{shortcode}',\n                pathParams: {\n                    shortcode: shortcode\n                }\n            }, callback);\n        },\n        \n        /**\n         * Follows the shortcode URL link.\n         * @param {string} shortcode – Shortcode identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.shortcodes#\n         */\n        follow: function(shortcode, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'shortcode.follow',\n                method: 'GET',\n                path: '/{shortcode}',\n                pathParams: {\n                    shortcode: shortcode\n                }\n            }, callback);\n        }\n        \n    };\n    \n    /**\n     * Workspace\n     * @namespace Client.shortcodes.workspaces\n     */\n    Client.shortcodes.workspaces = {\n        \n        /**\n         * Creates a new workspace.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.workspaces#\n         */\n        create: function(payload, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'workspace.create',\n                method: 'POST',\n                path: '/api/workspaces',\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Retrieves a workspace.\n         * @param {string} workspace_id – Workspace identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.workspaces#\n         */\n        retrieve: function(workspace_id, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'workspace.retrieve',\n                method: 'GET',\n                path: '/api/workspaces/{workspace_id}',\n                pathParams: {\n                    workspace_id: workspace_id\n                }\n            }, callback);\n        },\n        \n        /**\n         * Lists workspaces.\n         * @param {object} [query] - Filter arguments\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.workspaces#\n         */\n        list: function(query, callback) {\n            // Shift optional arguments, if necessary\n            if (typeof query === \"function\") {\n                callback = query;\n                query = undefined;\n            }\n    \n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'workspace.list',\n                method: 'GET',\n                path: '/api/workspaces',\n                query: query\n            }, callback);\n        },\n        \n        /**\n         * Updates a workspace.\n         * @param {string} workspace_id – Workspace identifier.\n         * @param {object} payload - Resource or parameters\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.workspaces#\n         */\n        update: function(workspace_id, payload, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'workspace.update',\n                method: 'PUT',\n                path: '/api/workspaces/{workspace_id}',\n                pathParams: {\n                    workspace_id: workspace_id\n                },\n                payload: payload\n            }, callback);\n        },\n        \n        /**\n         * Deletes a workspace.\n         * @param {string} workspace_id – Workspace identifier.\n         * @param {requestCallback} [callback] – Optional callback. When present, the request is executed\n         * @return {Query} - Compiled query ready for execution\n         * @memberof Client.workspaces#\n         */\n        delete: function(workspace_id, callback) {\n            return Client._makeRequest({\n                api: 'shortcodes',\n                action: 'workspace.delete',\n                method: 'DELETE',\n                path: '/api/workspaces/{workspace_id}',\n                pathParams: {\n                    workspace_id: workspace_id\n                }\n            }, callback);\n        }\n        \n    };\n    \n\n});\n}).call(this)}).call(this,require('_process'))\n},{\"../src/provider\":27,\"../src/providers/fetch_provider\":28,\"../src/providers/http_provider\":2,\"../src/query\":29,\"_process\":18}]},{},[]);\n"],"names":["require","r","e","n","t","o","i","f","c","u","a","Error","code","p","exports","call","length","1","module","global","possibleNames","g","globalThis","out","this","self","window","2","3","GetIntrinsic","callBind","$indexOf","name","allowMissing","intrinsic","./","get-intrinsic","4","bind","$apply","$call","$reflectApply","$gOPD","$defineProperty","$max","value","originalFunction","func","arguments","configurable","applyBind","apply","function-bind","5","6","hasOwn","Object","prototype","hasOwnProperty","toString","obj","fn","ctx","TypeError","l","k","7","slice","Array","toStr","that","target","bound","Empty","args","boundLength","Math","max","boundArgs","push","Function","join","result","concat","8","implementation","./implementation","9","undefined","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","getOwnPropertyDescriptor","throwTypeError","doEval","gen","getProto","INTRINSICS","ThrowTypeError","calleeThrows","get","gOPDthrows","hasSymbols","getPrototypeOf","x","__proto__","needsEval","TypedArray","Uint8Array","%AggregateError%","AggregateError","%Array%","%ArrayBuffer%","ArrayBuffer","%ArrayIteratorPrototype%","Symbol","iterator","%AsyncFromSyncIteratorPrototype%","%AsyncFunction%","%AsyncGenerator%","%AsyncGeneratorFunction%","%AsyncIteratorPrototype%","%Atomics%","Atomics","%BigInt%","BigInt","%Boolean%","Boolean","%DataView%","DataView","%Date%","Date","%decodeURI%","decodeURI","%decodeURIComponent%","decodeURIComponent","%encodeURI%","encodeURI","%encodeURIComponent%","encodeURIComponent","%Error%","%eval%","eval","%EvalError%","EvalError","%Float32Array%","Float32Array","%Float64Array%","Float64Array","%FinalizationRegistry%","FinalizationRegistry","%Function%","%GeneratorFunction%","%Int8Array%","Int8Array","%Int16Array%","Int16Array","%Int32Array%","Int32Array","%isFinite%","isFinite","%isNaN%","isNaN","%IteratorPrototype%","%JSON%","JSON","%Map%","Map","%MapIteratorPrototype%","%Math%","%Number%","Number","%Object%","%parseFloat%","parseFloat","%parseInt%","parseInt","%Promise%","Promise","%Proxy%","Proxy","%RangeError%","RangeError","%ReferenceError%","ReferenceError","%Reflect%","Reflect","%RegExp%","RegExp","%Set%","Set","%SetIteratorPrototype%","%SharedArrayBuffer%","SharedArrayBuffer","%String%","String","%StringIteratorPrototype%","%Symbol%","%SyntaxError%","%ThrowTypeError%","%TypedArray%","%TypeError%","%Uint8Array%","%Uint8ClampedArray%","Uint8ClampedArray","%Uint16Array%","Uint16Array","%Uint32Array%","Uint32Array","%URIError%","URIError","%WeakMap%","WeakMap","%WeakRef%","WeakRef","%WeakSet%","WeakSet","LEGACY_ALIASES","%ArrayBufferPrototype%","%ArrayPrototype%","%ArrayProto_entries%","%ArrayProto_forEach%","%ArrayProto_keys%","%ArrayProto_values%","%AsyncFunctionPrototype%","%AsyncGeneratorPrototype%","%BooleanPrototype%","%DataViewPrototype%","%DatePrototype%","%ErrorPrototype%","%EvalErrorPrototype%","%Float32ArrayPrototype%","%Float64ArrayPrototype%","%FunctionPrototype%","%Generator%","%GeneratorPrototype%","%Int8ArrayPrototype%","%Int16ArrayPrototype%","%Int32ArrayPrototype%","%JSONParse%","%JSONStringify%","%MapPrototype%","%NumberPrototype%","%ObjectPrototype%","%ObjProto_toString%","%ObjProto_valueOf%","%PromisePrototype%","%PromiseProto_then%","%Promise_all%","%Promise_reject%","%Promise_resolve%","%RangeErrorPrototype%","%ReferenceErrorPrototype%","%RegExpPrototype%","%SetPrototype%","%SharedArrayBufferPrototype%","%StringPrototype%","%SymbolPrototype%","%SyntaxErrorPrototype%","%TypedArrayPrototype%","%TypeErrorPrototype%","%Uint8ArrayPrototype%","%Uint8ClampedArrayPrototype%","%Uint16ArrayPrototype%","%Uint32ArrayPrototype%","%URIErrorPrototype%","%WeakMapPrototype%","%WeakSetPrototype%","$concat","$spliceApply","splice","$replace","replace","$strSlice","rePropName","reEscapeChar","parts","string","first","last","match","number","quote","subString","stringToPath","intrinsicBaseName","alias","intrinsicName","getBaseIntrinsic","skipFurtherCaching","isOwn","part","intrinsicRealName","desc","has","has-symbols","10","origSymbol","hasSymbolSham","./shams","11","getOwnPropertySymbols","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","descriptor","enumerable","12","toStringTag","has-symbols/shams","13","14","create","ctor","superCtor","super_","constructor","writable","TempCtor","15","isStandardArguments","hasToStringTag","$toString","isLegacyArguments","callee","callBound","supportsStandardArguments","call-bind/callBound","has-tostringtag/shams","16","GeneratorFunction","fnToStr","isFnRegex","test","generatorFunc","getGeneratorFunc","17","forEach","availableTypedArrays","typedArrays","array","$slice","toStrTags","gOPD","typedArray","arr","proto","superProto","anyTrue","getter","tag","available-typed-arrays","es-abstract/helpers/getOwnPropertyDescriptor","foreach","18","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","19","qs","sep","eq","options","regexp","maxKeys","split","kstr","idx","indexOf","vstr","substr","v","isArray","xs","20","stringifyPrimitive","map","objectKeys","ks","res","key","21","decode","parse","encode","stringify","./decode","./encode","22","setImmediate","clearImmediate","immediateIds","nextImmediateId","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","process/browser.js","timers","23","arg","copy","fill","readUInt8","24","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","bigIntValue","symbolValue","BigIntSupported","SymbolSupported","ObjectToString","numberValue","valueOf","stringValue","booleanValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isPromise","input","then","catch","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","isSet","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","method","defineProperty","is-arguments","is-generator-function","is-typed-array","which-typed-array","25","debugEnv","getOwnPropertyDescriptors","descriptors","formatRegExp","debugs","format","isString","objects","inspect","str","_","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnvRegex","opts","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","hash","visibleKeys","val","isError","formatError","isRegExp","isDate","base","braces","toUTCString","output","formatProperty","formatArray","pop","reduceToSingleString","reduce","prev","cur","numLinesEst","set","line","ar","re","objectToString","d","pad","NODE_DEBUG","toUpperCase","debuglog","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","date","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","kCustomPromisifiedSymbol","promisify","original","promiseResolve","promiseReject","promise","resolve","reject","err","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","cb","rej","reason","newReason","./support/isBuffer","./support/types","_process","26","foundName","27","Provider","client","compile","query","provider","execute","callback","_unauthorizedHook","config","onUnauthorizedResponse","28","util","FetchProvider","rpcHost","rpcMethod","maxConcurrency","_activeRequests","_requestQueue","_handleRequest","_completeRequest","_runQueueIfAble","assign","to","index","nextSource","nextKey","areRequestsSaturated","_queueRequest","queuedRequest","shift","payload","headers","req","body","credentials","signal","fetch","action","json","statusCode","message","attributes","source","wrappedError","../provider","29","sdkUtil","querystring","Query","api","path","pathParams","sessionToken","cookies","extra","overrideAll","setAPI","setAction","setMethod","setPath","setPathParams","where","data","setCookies","setHeaders","setOptions","setKey","setSessionToken","getRealPath","buildPath","getFullPath","params","doc","skip","count","take","./util","30","destination","token","extractParams","resultPath","exec","okanjo-sdk","Client","resourceBinders","Version","_makeRequest","spec","accounts","retrieve","account_id","list","update","bind_oauth","deregister_oauth","recover","register_oauth","retrieve_acl","ads","articles","url_or_id","follow","article_id","retrieve_content","domains","domain_name","delete","organizations","org_id","placements","placement_id","create_test","delete_test","placement_test_id","update_test","platforms","products","product_id","properties","property_id","reporting","click_date_histogram","click_top_n","page_date_histogram","page_report","page_top_n","resource_date_histogram","resource_report","resource_top_n","widget_date_histogram","widget_report","widget_top_n","resource_sets","resource_set_name","roles","role_id","add_account","list_accounts","remove_account","sessions","session_id","oauth_authorize","retrieve_current","stores","store_id","farm","activities","instance_id","advertisers","advertiser_id","regenerate_webhook","webhook_type","retrieve_webhooks","advertiser_events","acknowledge","amazon_links","vendor_id_asin","search","vendor_id","track_impression","buckets","bucket_id","backfill","status","toggle_ai","toggle_ai_automation","truncate","bucket_items","categories","merchant_id","upsert","commissions","commission_id","correlations","direct_links","vendor_offer_id","domain_mappings","fqdn","summary","instances","merchants","offers","programs","program_id","program_actions","program_action_id","recommended_offers","commission_by_group","commission_date_histogram","commission_report","commission_top_n","link_date_histogram","link_top_n","vendor_sync_histogram","sockets","create_token","vendors","resync","vendor_syncs","sync_id","shortcodes","date_histogram","top_n","shortcode","workspaces","workspace_id","../src/provider","../src/providers/fetch_provider","../src/providers/http_provider","../src/query"],"mappings":"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"}